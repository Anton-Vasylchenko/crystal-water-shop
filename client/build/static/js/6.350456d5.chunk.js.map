{"version":3,"sources":["../node_modules/object-to-formdata/dist/index.module.js","components/cart-item/cart-item.js","components/cart-item/index.js","components/order-form/order-form.js","components/order-form/index.js","services/sendMail.js","assets/images/trash-icon.png","assets/images/cart-is-empty.png","pages/cart-page/cart-page.js","pages/cart-page/index.js"],"names":["isUndefined","value","undefined","isArray","Array","isBlob","size","type","slice","serialize","obj","cfg","fd","pre","indices","nullsAsUndefineds","booleansAsIntegers","allowEmptyArrays","FormData","append","isBoolean","length","forEach","index","key","Date","isDate","toISOString","Object","isObject","name","lastModifiedDate","lastModified","isFile","keys","prop","lastIndexOf","substring","module","exports","CartItem","props","item","count","totalPrice","onDeleteItem","onPlus","onMinus","id","img","showPopup","setShowPopup","React","useState","onClosePopupHandler","className","src","ImgUrlDefault","PRODUCTS","alt","to","onClick","show","handleNo","handleYes","title","body","OrderForm","dispatch","useDispatch","checkboxChecked","setCheckboxChecked","userExists","setUserExists","showSuccessMsg","setShowSuccessMsg","items","useSelector","cart","isAuth","email","phone","user","nameValue","setNameValue","phoneValue","setPhoneValue","passwordValue","setPasswordValue","emailValue","setEmailValue","errors","setErrors","password","useEffect","sendOrderToEmail","async","userId","userData","registration","then","data","setUser","setIsAuth","e","itemOrders","userName","userEmail","userPhone","$host","post","mailData","sendEmail","alert","response","message","clearCart","stopPropagation","Modal","animation","onHide","Header","closeButton","Title","Alert","variant","Body","Form","Row","Group","as","Col","controlId","Label","Control","onChange","prevState","target","placeholder","Check","label","checked","Button","enteredData","enteredDataIsValid","isEmpty","isEmail","isFiveChars","values","includes","CartView","onToggleClearCartPopup","onClickYes","totalCount","Fragment","trashIcon","CartPage","itemTotalCount","itemTotalPrice","delItemFromCart","removeCartItem","plusItemCart","addItemToCart","minusItemCart","minusCartItem","cartItemsList","map","elem","backArrow","emptyCartImg"],"mappings":"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","file":"static/js/6.350456d5.chunk.js","sourcesContent":["const isUndefined = (value) => value === undefined;\n\nconst isNull = (value) => value === null;\n\nconst isBoolean = (value) => typeof value === 'boolean';\n\nconst isObject = (value) => value === Object(value);\n\nconst isArray = (value) => Array.isArray(value);\n\nconst isDate = (value) => value instanceof Date;\n\nconst isBlob = (value) =>\n  value &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.slice === 'function';\n\nconst isFile = (value) =>\n  isBlob(value) &&\n  typeof value.name === 'string' &&\n  (typeof value.lastModifiedDate === 'object' ||\n    typeof value.lastModified === 'number');\n\nconst serialize = (obj, cfg, fd, pre) => {\n  cfg = cfg || {};\n\n  cfg.indices = isUndefined(cfg.indices) ? false : cfg.indices;\n\n  cfg.nullsAsUndefineds = isUndefined(cfg.nullsAsUndefineds)\n    ? false\n    : cfg.nullsAsUndefineds;\n\n  cfg.booleansAsIntegers = isUndefined(cfg.booleansAsIntegers)\n    ? false\n    : cfg.booleansAsIntegers;\n\n  cfg.allowEmptyArrays = isUndefined(cfg.allowEmptyArrays)\n    ? false\n    : cfg.allowEmptyArrays;\n\n  fd = fd || new FormData();\n\n  if (isUndefined(obj)) {\n    return fd;\n  } else if (isNull(obj)) {\n    if (!cfg.nullsAsUndefineds) {\n      fd.append(pre, '');\n    }\n  } else if (isBoolean(obj)) {\n    if (cfg.booleansAsIntegers) {\n      fd.append(pre, obj ? 1 : 0);\n    } else {\n      fd.append(pre, obj);\n    }\n  } else if (isArray(obj)) {\n    if (obj.length) {\n      obj.forEach((value, index) => {\n        const key = pre + '[' + (cfg.indices ? index : '') + ']';\n\n        serialize(value, cfg, fd, key);\n      });\n    } else if (cfg.allowEmptyArrays) {\n      fd.append(pre + '[]', '');\n    }\n  } else if (isDate(obj)) {\n    fd.append(pre, obj.toISOString());\n  } else if (isObject(obj) && !isFile(obj) && !isBlob(obj)) {\n    Object.keys(obj).forEach((prop) => {\n      const value = obj[prop];\n\n      if (isArray(value)) {\n        while (prop.length > 2 && prop.lastIndexOf('[]') === prop.length - 2) {\n          prop = prop.substring(0, prop.length - 2);\n        }\n      }\n\n      const key = pre ? pre + '[' + prop + ']' : prop;\n\n      serialize(value, cfg, fd, key);\n    });\n  } else {\n    fd.append(pre, obj);\n  }\n\n  return fd;\n};\n\nmodule.exports = {\n  serialize,\n};\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './cart-item.scss';\r\nimport ModalBox from '../UI/modal-box';\r\nimport { ImgUrlDefault } from '../../utils/consts';\r\n\r\nconst CartItem = (props) => {\r\n    const { item, count, totalPrice, onDeleteItem, onPlus, onMinus } = props;\r\n    const { id, img, name } = item;\r\n\r\n    const [showPopup, setShowPopup] = React.useState(false);\r\n\r\n    const onClosePopupHandler = () => {\r\n        setShowPopup(!showPopup);\r\n    }\r\n\r\n    const handlePlusClick = () => {\r\n        onPlus(item)\r\n    }\r\n\r\n    const handleMinusClick = () => {\r\n        onMinus(id)\r\n    }\r\n\r\n    const onClickYesPopupHandler = () => {\r\n        onDeleteItem(id)\r\n        setShowPopup(!showPopup);\r\n    }\r\n\r\n    return (\r\n        <li className=\"cart-item \">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 d-flex align-items-center\">\r\n                    <div className=\"cart-item__img\">\r\n                        <img src={`${ImgUrlDefault.PRODUCTS}${img}`} alt=\"item\" />\r\n                    </div>\r\n                    <div className=\"cart-item__info\">\r\n                        <Link to={`/shop/${id}`}><h3>{name}</h3></Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 d-flex bottom-item-mobile align-items-center\">\r\n                    <div className=\"cart-item__count\">\r\n                        <div onClick={handleMinusClick} className=\"cart-item__btn unselectable-text\">-</div>\r\n                        <span>{count}</span>\r\n                        <div onClick={handlePlusClick} className=\"cart-item__btn unselectable-text\">+</div>\r\n                    </div>\r\n                    <div className=\"cart-item__price\">{totalPrice} ₴</div>\r\n                    <div className=\"cart-item__del\">\r\n                        <div className=\"cart-item__btn btn_del unselectable-text\" onClick={onClosePopupHandler}>x</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <ModalBox\r\n                show={showPopup}\r\n                handleNo={onClosePopupHandler}\r\n                handleYes={onClickYesPopupHandler}\r\n                title={`Видалення: \"${name}\"`}\r\n                body={`Ви дійсно бажаєте видалити з кошика \"${name}\"?`}\r\n            />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n","import CartItem from './cart-item';\r\n\r\nexport default CartItem;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsAuth, setUser, clearCart } from '../../redux/actions';\r\nimport { Modal, Form, Button, Col, Alert } from 'react-bootstrap';\r\nimport { sendEmail } from '../../services/sendMail';\r\nimport { registration } from '../../services/userAPI';\r\nimport { isEmpty, isFiveChars, isEmail } from '../../helpers/isValidInput';\r\nimport ModalBox from '../UI/modal-box';\r\nimport { serialize } from 'object-to-formdata';\r\n\r\nimport './order-form.scss';\r\n\r\nfunction OrderForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [checkboxChecked, setCheckboxChecked] = useState(false);\r\n    const [userExists, setUserExists] = useState(false);\r\n    const [showPopup, setShowPopup] = React.useState(false);\r\n    const [showSuccessMsg, setShowSuccessMsg] = React.useState(false);\r\n\r\n    const { items } = useSelector(({ cart }) => cart);\r\n    const { id, isAuth, name, email, phone } = useSelector(({ user }) => user);\r\n\r\n    const [nameValue, setNameValue] = useState('');\r\n    const [phoneValue, setPhoneValue] = useState('');\r\n    const [passwordValue, setPasswordValue] = useState('');\r\n    const [emailValue, setEmailValue] = useState('');\r\n\r\n    const [errors, setErrors] = React.useState({\r\n        name: true,\r\n        phone: true,\r\n        email: true,\r\n        password: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        setNameValue(name)\r\n        setPhoneValue(phone);\r\n        setEmailValue(email)\r\n    }, [name, phone, email])\r\n\r\n    const handleNo = () => {\r\n        setShowPopup(false);\r\n        setErrors({\r\n            name: true,\r\n            phone: true,\r\n            email: true,\r\n            password: true\r\n        });\r\n        setCheckboxChecked(false);\r\n    }\r\n\r\n    const formShowHandler = () => { setShowPopup(true) }\r\n\r\n    const handleSubmit = async (e) => {\r\n        const enteredData = {\r\n            name: nameValue,\r\n            phone: phoneValue,\r\n            email: emailValue,\r\n            password: checkboxChecked ? passwordValue : ''\r\n        }\r\n\r\n        const enteredDataIsValid = {\r\n            name: !isEmpty(enteredData.name),\r\n            phone: !isEmpty(enteredData.phone),\r\n            email: !isEmail(enteredData.email),\r\n            password: checkboxChecked ? isFiveChars(enteredData.password) : true\r\n        }\r\n\r\n        setErrors({ ...enteredDataIsValid })\r\n\r\n        let formIsValid = !Object.values(enteredDataIsValid).includes(false);\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        sendOrderToEmail().then(data => {\r\n            if (data === false) {\r\n                setUserExists(true);\r\n                return;\r\n            }\r\n\r\n            handleNo();\r\n            setShowSuccessMsg(true);\r\n        });\r\n    }\r\n\r\n    const sendOrderToEmail = async () => {\r\n        let userId = id;\r\n\r\n        const userData = {\r\n            name: nameValue,\r\n            email: emailValue,\r\n            password: passwordValue,\r\n            phone: phoneValue\r\n        }\r\n\r\n        if (checkboxChecked) {\r\n            try {\r\n                await registration(userData.email, userData.password, userData.name, userData.phone).then(data => {\r\n                    dispatch(setUser(data))\r\n                    dispatch(setIsAuth(true))\r\n                    userId = data.id\r\n                });\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        try {\r\n            const itemOrders = {};\r\n\r\n            for (let key in items) {\r\n                itemOrders[key] = { ...items[key][0] };\r\n                itemOrders[key].count = items[key].length;\r\n                itemOrders[key].userId = userId;\r\n                itemOrders[key].userName = nameValue;\r\n                itemOrders[key].userEmail = emailValue;\r\n                itemOrders[key].userPhone = phoneValue;\r\n            }\r\n\r\n            const formData = serialize(\r\n                itemOrders\r\n            );\r\n\r\n            sendEmail(formData);\r\n\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    const nameChangeHandler = (e) => {\r\n        setErrors(prevState => ({ ...prevState, name: true }));\r\n        setNameValue(e.target.value);\r\n    }\r\n\r\n    const phoneChangeHandler = (e) => {\r\n        setErrors(prevState => ({ ...prevState, phone: true }));\r\n        setPhoneValue(e.target.value);\r\n    }\r\n\r\n    const emailChangeHandler = (e) => {\r\n        setErrors(prevState => ({ ...prevState, email: true }));\r\n        setUserExists(false);\r\n        setEmailValue(e.target.value);\r\n    }\r\n\r\n    const passwordChangeHandler = (e) => {\r\n        setErrors(prevState => ({ ...prevState, password: true }));\r\n        setPasswordValue(e.target.value);\r\n    }\r\n\r\n    const checkboxChangeHandler = (e) => {\r\n        setCheckboxChecked(e.target.checked);\r\n    }\r\n\r\n    const handleMsgClose = () => {\r\n        setShowSuccessMsg(false)\r\n        dispatch(clearCart());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cart-bottom__buy-btn unselectable-text\" onClick={formShowHandler}>Замовити</div>\r\n\r\n            {showSuccessMsg && <ModalBox\r\n                show={showSuccessMsg}\r\n                handleYes={handleMsgClose}\r\n                title={`Замовлення успішно відправлено!`}\r\n                body={`Дякуємо за ваше замовлення. Очікуйте телефонного дзвінка для уточнення деталей.`}\r\n            />}\r\n\r\n            <div onClick={e => e.stopPropagation()}>\r\n                <Modal size=\"lg\" animation={true} show={showPopup} onHide={handleNo}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title> Оформлення замовлення </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    {userExists && <Alert variant=\"danger\" className=\"m-2\">\r\n                        Користувач з даною поштовою скринькою вже існує\r\n                    </Alert>}\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"name\">\r\n                                    <Form.Label>\r\n                                        Прізвище та ім'я\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={nameValue}\r\n                                        onChange={nameChangeHandler}\r\n                                        placeholder=\"Введіть, будь ласка, ваше прізвище та ім'я\"\r\n                                    />\r\n                                </Form.Group>\r\n                                {!errors.name && <Alert className=\"error-msg\" variant='danger'>Помилка! Ви не ввели ваше ім'я</Alert>}\r\n                            </Form.Row>\r\n\r\n                            <br />\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"phone\">\r\n                                    <Form.Label>\r\n                                        Номер телефону\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        onChange={phoneChangeHandler}\r\n                                        value={phoneValue ? phoneValue : ''}\r\n                                        placeholder=\"Введіть, будь ласка, ваш мобільний номер\"\r\n                                    />\r\n                                    {!errors.phone && <Alert className=\"error-msg\" variant='danger'>Помилка! Ви не ввели номер телефону</Alert>}\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <br />\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"email\">\r\n                                    <Form.Label>\r\n                                        Електронна скринька\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        onChange={emailChangeHandler}\r\n                                        value={emailValue}\r\n                                        placeholder=\"Введіть, будь ласка, ваш email\"\r\n                                    />\r\n                                    {!errors.email && <Alert className=\"error-msg\" variant='danger'>Помилка! Поштова скринька не корректна</Alert>}\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <br />\r\n\r\n                            {!isAuth && <Form.Check\r\n                                type={'checkbox'}\r\n                                id={`default-checkbox`}\r\n                                label={`Зареєструватися`}\r\n                                onChange={checkboxChangeHandler}\r\n                            />}\r\n\r\n                            {checkboxChecked &&\r\n                                <div className=\"registration-section\">\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} controlId=\"password\">\r\n                                            <Form.Label>\r\n                                                Пароль\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"password\"\r\n                                                onChange={passwordChangeHandler}\r\n                                                value={passwordValue}\r\n                                                placeholder=\"Придумайте пароль\"\r\n                                            />\r\n                                            {!errors.password &&\r\n                                                <Alert className=\"error-msg\" variant='danger'>\r\n                                                    Пароль повинен налічувати не менше 5 символів\r\n                                                </Alert>}\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                </div>\r\n                            }\r\n\r\n                            <hr />\r\n\r\n                            <Button variant=\"secondary\" onClick={handleNo}>\r\n                                Відмінити\r\n                            </Button>\r\n\r\n                            <Button className=\"m-2\" variant=\"primary\" id=\"btn\" type=\"button\" onClick={handleSubmit}>\r\n                                Купити\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderForm\r\n","import OrderForm from './order-form';\r\nexport default OrderForm;","import { $host } from './http';\r\n\r\nexport const sendEmail = async (mailData) => {\r\n    const { data } = await $host.post('api/order/', mailData)\r\n    return data\r\n}","export default __webpack_public_path__ + \"static/media/trash-icon.49eafd40.png\";","export default __webpack_public_path__ + \"static/media/cart-is-empty.6f0349a5.png\";","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Container from '../../components/UI/container';\r\nimport CartItem from '../../components/cart-item';\r\nimport OrderForm from '../../components/order-form';\r\nimport ModalBox from '../../components/UI/modal-box';\r\nimport trashIcon from '../../assets/images/trash-icon.png';\r\nimport emptyCartImg from '../../assets/images/cart-is-empty.png';\r\n\r\nimport { clearCart, removeCartItem, minusCartItem, addItemToCart } from \"../../redux/actions\"\r\n\r\nimport './cart-page.scss';\r\n\r\nexport default function CartPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const { totalPrice,\r\n        totalCount,\r\n        items,\r\n        itemTotalCount,\r\n        itemTotalPrice\r\n    } = useSelector(({ cart }) => cart);\r\n\r\n    const [showPopup, setShowPopup] = React.useState(false)\r\n\r\n    const onToggleClearCartPopup = () => {\r\n        setShowPopup(prevState => !prevState);\r\n    }\r\n\r\n    const delItemFromCart = (id) => {\r\n        dispatch(removeCartItem(id));\r\n    }\r\n\r\n    const plusItemCart = (item) => {\r\n        dispatch(addItemToCart(item));\r\n    }\r\n\r\n    const minusItemCart = (id) => {\r\n        itemTotalCount[id] > 1 && dispatch(minusCartItem(id));\r\n    }\r\n\r\n    const handleClickedYes = () => {\r\n        dispatch(clearCart());\r\n        setShowPopup(!showPopup);\r\n    }\r\n\r\n    const cartItems = Object.keys(items).map(key => {\r\n        return items[key][0];\r\n    });\r\n\r\n    const cartItemsList = cartItems.map((elem) => {\r\n        const id = elem.id;\r\n        return <CartItem\r\n            key={id}\r\n            item={elem}\r\n            count={itemTotalCount[id]}\r\n            totalPrice={itemTotalPrice[id]}\r\n            onDeleteItem={delItemFromCart}\r\n            onMinus={minusItemCart}\r\n            onPlus={plusItemCart}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <Container title=\"Кошик\" backArrow>\r\n            {totalCount ?\r\n                <CartView\r\n                    items={cartItemsList}\r\n                    onToggleClearCartPopup={onToggleClearCartPopup}\r\n                    onClickYes={handleClickedYes}\r\n                    totalCount={totalCount}\r\n                    totalPrice={totalPrice}\r\n                    showPopup={showPopup}\r\n                />\r\n                :\r\n                <h3 className=\"text-center text-secondary jumbotron jumbotron-fluid\">\r\n                    <img className=\"empty-cart-img\" src={emptyCartImg} alt=\"cart is empty\" />\r\n                    <p>Ваш кошик порожній :( </p>\r\n                </h3>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst CartView = (props) => {\r\n    const { items,\r\n        showPopup,\r\n        onToggleClearCartPopup,\r\n        onClickYes,\r\n        totalCount,\r\n        totalPrice\r\n    } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ModalBox\r\n                handleNo={onToggleClearCartPopup}\r\n                handleYes={onClickYes}\r\n                show={showPopup}\r\n                title={'Кошик'}\r\n                body={'Ви дійсно бажаєте очистити кошик?'}\r\n            />\r\n\r\n            <div className=\"cart-top\">\r\n                <div onClick={onToggleClearCartPopup} className=\"cart-top__clear-btn unselectable-text\">\r\n                    <img src={trashIcon} alt=\"trash-icon\" />\r\n                    Очистити кошик\r\n                </div>\r\n            </div>\r\n\r\n            <ul>{items}</ul>\r\n\r\n            <div className=\"cart-bottom\">\r\n                <div className=\"cart-bottom__info\">\r\n                    <div className=\"cart-bottom__items-counts\">Всього товарів: <span>{totalCount} шт.</span></div>\r\n                    <div className=\"cart-bottom__total-price\">Сума замовлення: <span>{totalPrice} ₴</span></div>\r\n                </div>\r\n\r\n                <OrderForm />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import CartPage from './cart-page';\r\n\r\nexport default CartPage;"],"sourceRoot":""}