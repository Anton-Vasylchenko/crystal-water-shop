{"version":3,"sources":["components/restore-password/restore-password.js","components/restore-password/index.js","pages/auth-page/auth-page.js","pages/auth-page/index.js"],"names":["RestorePassword","showModal","setShowModal","useState","email","setEmail","errorIsNotExist","setIsNotExist","showMsgSuccess","setShowMsgSuccess","onShowRestorePasswordModal","e","prevState","resetPasswordInput","className","Alert","variant","htmlFor","type","id","value","onChange","target","successMessage","onClick","href","body","title","show","handleNo","handleYes","async","forgotPassword","LoginPage","dispatch","useDispatch","isAuth","useSelector","user","React","password","setPassword","userName","setUserName","error","setError","history","useHistory","location","useLocation","isLogin","pathname","Routes","LOGIN_ROUTE","useEffect","onSubmit","event","preventDefault","includes","trim","length","isFiveChars","data","login","registration","setIsAuth","setUser","push","response","message","AuthPage"],"mappings":"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","file":"static/js/8.cf2bb6e3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { forgotPassword } from '../../services/userAPI';\r\nimport ModalBox from '../UI/modal-box';\r\n\r\nimport './restore-password.scss';\r\n\r\nfunction RestorePassword() {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [errorIsNotExist, setIsNotExist] = useState(false);\r\n    const [showMsgSuccess, setShowMsgSuccess] = useState(false);\r\n\r\n    const onShowRestorePasswordModal = (e) => {\r\n        setShowModal(prevState => !prevState);\r\n        setShowMsgSuccess(false);\r\n    }\r\n\r\n    const onSaveRestorePassword = async () => {\r\n        const data = await forgotPassword(email);\r\n\r\n        if (!data) {\r\n            setIsNotExist(true);\r\n            return;\r\n        }\r\n        setEmail('');\r\n        setShowMsgSuccess(true);\r\n        setIsNotExist(false);\r\n    }\r\n\r\n    const onChangeEmailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        setIsNotExist(false);\r\n    }\r\n\r\n    const resetPasswordInput = <div className=\"form-outline mb-4\">\r\n        {errorIsNotExist && <Alert variant={'danger'}> Користувач з такою поштою не зареєстрований </Alert>}\r\n        <label className=\"form-label reset-form-label\" htmlFor=\"email\">Введіть вашу пошту:</label>\r\n        <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            onChange={onChangeEmailHandler}\r\n        />\r\n    </div>\r\n\r\n    const successMessage = <Alert variant={\"success\"}>\r\n        На вказану пошту відправлено лист з інструкцією для відновлення паролю\r\n    </Alert>\r\n\r\n    return <>\r\n        <div onClick={onShowRestorePasswordModal}\r\n            className=\"restore-password\"\r\n            href=\"#\">Забули пароль?\r\n        </div>\r\n\r\n        <ModalBox\r\n            body={!showMsgSuccess ? resetPasswordInput : successMessage}\r\n            title=\"Відновлення паролю\"\r\n            show={showModal}\r\n            handleNo={onShowRestorePasswordModal}\r\n            handleYes={!showMsgSuccess ? onSaveRestorePassword : onShowRestorePasswordModal}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default RestorePassword;\r\n","import RestorePassword from './restore-password';\r\nexport default RestorePassword;","import React from 'react';\r\nimport Container from '../../components/UI/container';\r\nimport { setIsAuth, setUser } from '../../redux/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login, registration } from '../../services/userAPI';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Routes } from '../../utils/consts';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { isFiveChars } from '../../helpers/isValidInput';\r\nimport RestorePassword from '../../components/restore-password';\r\n\r\nimport './auth-page.scss';\r\n\r\nfunction LoginPage() {\r\n    const dispatch = useDispatch();\r\n    const { isAuth } = useSelector(({ user }) => user);\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [userName, setUserName] = React.useState('');\r\n    const [error, setError] = React.useState('');\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const isLogin = location.pathname === Routes.LOGIN_ROUTE;\r\n\r\n    React.useEffect(() => {\r\n        setError('')\r\n    }, [location])\r\n\r\n    const auth = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!email.includes('@') || email.trim().length === 0) {\r\n            setError('Email is not correct');\r\n            return\r\n        }\r\n\r\n        if (!isLogin && userName.trim().length === 0) {\r\n            setError('Name is not correct');\r\n            return;\r\n        }\r\n\r\n        if (!isLogin && !isFiveChars(password)) {\r\n            setError('Пароль не повинен бути коротшим 5 символів');\r\n            return;\r\n        }\r\n\r\n        if (password.trim().length === 0) {\r\n            setError('Password is not correct');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n            } else {\r\n                data = await registration(email, password, userName);\r\n            }\r\n            dispatch(setIsAuth(true))\r\n            dispatch(setUser(data))\r\n            history.push('/')\r\n        } catch (e) {\r\n            setError(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    if (isAuth) {\r\n        return (\r\n            <Container>\r\n                <div className=\"text-center\">Ви вже залогінені!</div>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    const onChangeEmailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePasswordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeNameHandler = (e) => {\r\n        setUserName(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <form className=\"login-form\" onSubmit={auth}>\r\n\r\n                {error.length > 0 && <Alert variant='danger'>\r\n                    {error}\r\n                </Alert>}\r\n\r\n                <h2> {isLogin ? 'Увійти' : 'Реєстрація'} </h2>\r\n\r\n                <div className=\"form-outline mb-4\">\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        className=\"form-control\"\r\n                        value={email}\r\n                        onChange={onChangeEmailHandler}\r\n                    />\r\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\r\n                </div>\r\n\r\n                {!isLogin && <div className=\"form-outline mb-4\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"userName\"\r\n                        className=\"form-control\"\r\n                        value={userName}\r\n                        onChange={onChangeNameHandler}\r\n                    />\r\n                    <label className=\"form-label\" htmlFor=\"userName\">Прізвище та ім'я</label>\r\n                </div>}\r\n\r\n                <div className=\"form-outline mb-4\">\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        className=\"form-control\"\r\n                        value={password}\r\n                        onChange={onChangePasswordHandler}\r\n                    />\r\n                    <label className=\"form-label\" htmlFor=\"password\">Пароль</label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">{isLogin ? 'Увійти' : 'Зареєструватися'}</button>\r\n            </form>\r\n\r\n            <RestorePassword />\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import AuthPage from './auth-page';\r\n\r\nexport default AuthPage;"],"sourceRoot":""}