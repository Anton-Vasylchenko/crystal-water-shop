{"version":3,"sources":["redux/reducers/goods.js","redux/reducers/filters.js","redux/reducers/advantages.js","redux/reducers/cart.js","redux/reducers/user.js","redux/reducers/orders.js","redux/reducers/index.js","redux/store.js","components/scroll-to-top/scroll-to-top.js","services/api-services.js","redux/actions/filters.js","services/http.js","services/productsAPI.js","redux/actions/goods.js","redux/actions/advantages.js","redux/actions/cart.js","redux/actions/user.js","redux/actions/orders.js","utils/consts.js","components/main-navigation/main-navigation.js","components/main-navigation/index.js","assets/images/logo.png","components/main-logo/main-logo.js","components/main-logo/index.js","components/login-panel/login-panel.js","components/login-panel/index.js","components/mobile-menu/mobile-menu.js","components/mobile-menu/index.js","components/user/user-panel/user-panel.js","components/user/user-panel/index.js","helpers/transformedUserName.js","assets/images/cart.png","components/Layout/header/header.js","components/Layout/header/index.js","hooks/useIsAdmin.js","components/admin/text-editor/TextEditor.js","components/admin/text-editor/index.js","components/admin/admin-components/admin-components-edit.js","components/Layout/footer/footer-item/footer-item.js","components/Layout/footer/footer-item/index.js","components/Layout/footer/footer.js","components/Layout/footer/index.js","components/UI/spinner/spinner.js","components/UI/spinner/index.js","components/UI/back-arrow/back-arrow.js","components/UI/back-arrow/index.js","components/UI/container/container.js","components/UI/container/index.js","components/admin/admin-products/admin-products-form.js","components/admin/admin-products/admin-products-add.js","components/UI/modal-box/modal-box.js","components/UI/modal-box/index.js","components/admin/admin-products/admin-products-delete.js","components/admin/admin-products/admin-products-edit.js","hooks/useIsModerator.js","components/shop-items-list/list-item/list-item.js","components/shop-items-list/list-item/index.js","components/popular-products/popular-products.js","components/popular-products/index.js","components/shop-item-details/shop-item-details.js","components/shop-item-details/index.js","components/error-404/error-404.js","components/error-404/index.js","components/admin/admin-categories/create-categories.js","components/admin/admin-categories/edit-categories-list-item.js","components/admin/admin-categories/edit-categories-list.js","components/categories-list/categories-list.js","components/categories-list/index.js","components/UI/pagination/usePagination.js","components/UI/pagination/pagination.js","components/UI/pagination/index.js","components/shop-items-list/shop-items-list.js","components/shop-items-list/index.js","components/UI/dropdown-arrow/dropdown-arrow.js","components/UI/dropdown-arrow/index.js","components/sort-filter/sort-order-arrow/sort-order-arrow.js","components/sort-filter/sort-order-arrow/index.js","components/sort-filter/sort-popup/sort-popup.js","components/sort-filter/sort-popup/index.js","pages/shop-page/shop-page.js","pages/shop-page/index.js","components/admin/admin-advantages/advantages-form.js","hooks/useAdminAdvantages.js","components/admin/admin-advantages/advantages-create.js","components/admin/admin-advantages/advantages-edit.js","components/admin/admin-advantages/advantages-delete.js","components/advantages-list/advantages-list-item.js","components/advantages-list/advantages-list.js","components/advantages-list/index.js","components/Layout/map/map.js","components/Layout/map/index.js","hooks/usePage.js","pages/home-page/index.js","pages/home-page/home-page.js","pages/about-us-page/about-us-page.js","pages/about-us-page/index.js","pages/contacts-page/index.js","pages/contacts-page/contacts-page.js","pages/payment-delivery-page/index.js","pages/payment-delivery-page/payment-delivery-page.js","components/cart-item/cart-item.js","components/cart-item/index.js","services/userAPI.js","helpers/isValidInput.js","components/order-form/order-form.js","components/order-form/index.js","services/sendMail.js","assets/images/trash-icon.png","assets/images/cart-is-empty.png","pages/cart-page/cart-page.js","pages/cart-page/index.js","components/restore-password/restore-password.js","components/restore-password/index.js","pages/auth-page/auth-page.js","pages/auth-page/index.js","components/admin/users-list/user-delete/user-delete.js","components/admin/users-list/user-item/user-item.js","components/admin/users-list/user-item/index.js","components/admin/users-list/users-list.js","components/admin/users-list/index.js","components/admin/admin-order-delete/admin-order-delete.js","components/orders-list/orders-table/order-table-item.js","components/orders-list/orders-table/orders-table.js","components/orders-list/orders-table/index.js","components/orders-list/orders-list-item/orders-list-item.js","components/orders-list/orders-list-item/index.js","components/orders-list/orders-list.js","components/orders-list/index.js","pages/reset-password-page/reset-password-page.js","components/user/user-profile/profile-edit-form/profile-edit-form.js","components/user/user-profile/change-password-form/change-password-form.js","components/user/user-profile/user-profile.js","components/user/user-profile/index.js","app/App.js","app/index.js","index.js"],"names":["initialState","items","itemDetails","page","totalCount","limit","isLoaded","goods","state","action","type","payload","popularItems","activeCategory","sortBy","sortOrder","filters","categories","advantages","totalPrice","updateCart","id","Object","keys","filter","key","reduce","obj","cart","item","itemTotalCount","itemTotalPrice","price","remove","newItemsList","role","isAuth","email","name","phone","user","pageOrders","isLoadedOrderItems","orders","itemsOrder","i","length","orderNumber","push","stateOrders","order","userName","userEmail","userPhone","totalAmount","amount","date","createdAt","orderId","newStateItems","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","withRouter","children","location","pathname","useEffect","scrollTo","top","left","apiServices","_baseUrl","getResource","async","res","fetch","this","url","ok","Error","status","json","getOrders","userId","data","axios","get","params","getOrdersItems","getUsers","getProductByCatId","catId","getShopItemById","getShopCategories","getAdvantages","fetchCategories","dispatch","then","setCategories","setActiveCategory","index","$host","create","baseURL","$authHost","interceptors","request","use","config","headers","authorization","localStorage","getItem","getAllProducts","categoryId","getComponentInfoByName","createAdvantages","post","advantage","updateAdvantages","patch","setLoaded","fetchGoods","category","setGoods","rows","setTotalCount","count","fetchPopularGoods","setPopularGoods","fetchItemDetails","getProductById","setItemDetails","setPage","pageNumber","fetchAdvantages","setAdvantages","addItemToCart","setIsAuth","bool","setUser","fetchOrders","setOrders","setOrdersTotalCount","setOrdersItems","setOrdersPage","_baseImgUrl","Routes","UserRoles","ComponentName","UserDefault","ProductDefault","ImgUrlDefault","ADVANTAGES","COMPONENTS","PRODUCTS","USERS","MainNavigation","className","to","MainLogo","classNames","src","Logo","alt","LoginPanel","MobileMenu","showMenu","setShowMenu","React","useState","useSelector","toggleMenu","prevState","onClick","UserPanel","useDispatch","history","useHistory","image","trim","includes","split","slice","transformedUserName","isAdmin","imageUrl","DropdownButton","title","Dropdown","Item","as","Link","eventKey","removeItem","Header","btnIsHighLighted","setBtnIsHighLighted","btnCartClasses","timer","setTimeout","clearTimeout","Cart","useIsAdmin","TextEditor","content","onChangeInfo","fieldName","text","setText","onSaveShanges","event","editor","getData","ClassicEditor","fontFamily","options","fontSize","toolbar","placeholder","onChange","onBlur","AdminComponentsEdit","updateData","modalVisible","setModalVisible","error","setError","nameCount","setNameCount","inputsValue","setInputsValue","closeModal","updateState","field","newValue","showErrorMsg","e","stopPropagation","Modal","size","animation","show","onHide","closeButton","Title","Alert","variant","Body","Form","Row","Group","Col","controlId","Label","Control","target","value","img","files","Button","replace","formData","FormData","append","updateComponent","alert","response","message","FooterItem","updateFooterInfo","parse","Footer","footerInfo","setFooterInfo","map","href","rel","Spinner","BackArrow","goBack","viewBox","d","Container","backArrow","mainTitle","backArrowBtn","loading","AdminProductsForm","handleNo","handleSubmit","selectedImage","setSelectedImage","description","onCancelHandle","clearForm","categoriesDropdown","cat","activeCat","active","imgUrl","URL","createObjectURL","Toggle","Menu","preventDefault","product","AdminProductsAdd","createProduct","currentCategory","ModalBox","handleYes","body","onClose","AdminProductDelete","setShow","toggleShow","delete","deleteProduct","AdminProductsEdit","itemCatId","setItemCatId","updateProduct","changeCategory","Number","MAX_SAFE_INTEGER","useIsModerator","ListItem","onClickBuyBtn","countOfAdded","isModerator","PopularProducts","cartItems","handleAddItemToCart","ShopItemDetails","itemId","editAccess","Fragment","Error404","CreateCategories","categoryValue","setCategoryValue","centered","createCategory","EditCategoriesListItem","handleDelete","handleUpdate","stateDeleteModal","setShowDeleteModal","stateEditInput","setEditInput","EditCategoriesList","isError","setIsError","deleteCategory","updateCategory","categoriesList","elem","CategoriesList","onSelectCategory","useCallback","defaultProps","onClickCategory","memo","DOTS","range","start","end","Array","from","_","idx","Pagination","props","onPageChange","siblingCount","currentPage","pageSize","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","lastPageIndex","rightRange","middleRange","usePagination","lastPage","classnames","disabled","console","log","selected","ShopItemsList","loadingGoods","goodsList","DropdownArrow","rotate","width","height","fill","xmlns","SortOrderArrow","changeOrder","arrowRotates","aa","SortPopup","visiblePopup","setVisiblePopup","sortRef","useRef","activeLabel","find","document","addEventListener","handleOutsideClick","path","composedPath","current","onChangeSortBy","elements","ref","ShopPage","AdvantagesForm","titleCount","setTitleCount","useAdminAdvantages","isModalVisible","setIsModalVisible","onShowModalForm","onCloseModalForm","reqData","AdvantagesCreate","color","AdvantagesEdit","AdvantagesDelete","deleteAdvantages","AdvantagesListItem","AdvantagesList","advantagesList","mapboxgl","workerClass","MapboxWorker","accessToken","Map","mapContainer","lng","setLng","lat","setLat","zoom","setZoom","container","style","center","on","getCenter","toFixed","getZoom","usePage","componentData","setComponentData","isLoading","setIsLoading","updateInfo","finally","update","HomePage","AboutUsPage","ContactsPage","PaymentDeliveryPage","CartItem","onDeleteItem","onPlus","onMinus","showPopup","setShowPopup","onClosePopupHandler","registration","password","setItem","token","jwt_decode","isEmpty","isFiveChars","OrderForm","checkboxChecked","setCheckboxChecked","userExists","setUserExists","showSuccessMsg","setShowSuccessMsg","nameValue","setNameValue","phoneValue","setPhoneValue","passwordValue","setPasswordValue","emailValue","setEmailValue","errors","setErrors","sendOrderToEmail","userData","itemOrders","mailData","sendEmail","serialize","Check","label","checked","enteredData","enteredDataIsValid","values","CartView","onToggleClearCartPopup","onClickYes","trashIcon","CartPage","delItemFromCart","removeCartItem","plusItemCart","minusItemCart","minusCartItem","cartItemsList","emptyCartImg","RestorePassword","showModal","setShowModal","setEmail","errorIsNotExist","setIsNotExist","showMsgSuccess","setShowMsgSuccess","onShowRestorePasswordModal","resetPasswordInput","htmlFor","successMessage","forgotPassword","LoginPage","AuthPage","setPassword","setUserName","useLocation","isLogin","onSubmit","login","UserDelete","showDeletePopup","setShowDeletePopup","onTogglePopup","deleteUser","onDeleteUser","UserItem","pageLimit","idUserLogined","userNumber","defaultValue","userRole","changeRole","UsersList","users","setUsers","deleteUserHandler","newUsers","Table","responsive","AdminOrderDelete","onShowPopupHandler","deleteOrders","OrderTableItem","isProductDeleted","setIsProductDeleted","onError","goodsId","OrdersTable","OrdersListItem","dropdownOrder","setDropdownOrder","onErrorImage","orderImages","images","orderData","join","OrdersList","ordersList","ResetPasswordPage","enteredPasswordInput","setEnteredPasswordInput","resetPassword","ProfileEditForm","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredPhone","setEnteredPhone","onHideForm","onShowFormHandler","onSubmitHandler","newProfile","onSaveProfile","ChangePasswordForm","showForm","setShowForm","currentPasswordInput","setCurrentPasswordInput","newPasswordInput","setNewPasswordInput","serverError","setServerError","currentPassword","newPassword","updateErrors","inputName","msg","onChangePasswordHandler","changePassword","catch","UserProfile","isFormVisible","setIsFormVisible","profile","updateUser","App","setLoading","check","exact","component","Pages","render","match","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5792b94b.chunk.js","sourcesContent":["const initialState = {\r\n    items: [],\r\n    itemDetails: {},\r\n    page: 1,\r\n    totalCount: 0,\r\n    limit: 8,\r\n    isLoaded: false\r\n}\r\n\r\nconst goods = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_GOODS':\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isLoaded: true\r\n            };\r\n        case 'SET_POPULAR_GOODS':\r\n            return {\r\n                ...state,\r\n                popularItems: action.payload,\r\n                isLoaded: true\r\n            };\r\n        case 'SET_ITEM_DETAILS':\r\n            return {\r\n                ...state,\r\n                itemDetails: action.payload,\r\n                isLoaded: true\r\n            };\r\n        case 'SET_LOADED':\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload\r\n            };\r\n        case 'SET_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.payload,\r\n            };\r\n        case 'SET_LIMIT':\r\n            return {\r\n                ...state,\r\n                limit: action.payload,\r\n            };\r\n        case 'SET_TOTAL_COUNT':\r\n            return {\r\n                ...state,\r\n                totalCount: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default goods;","const initialState = {\r\n    activeCategory: null,\r\n    sortBy: 'name',\r\n    sortOrder: 'asc'\r\n}\r\n\r\nconst filters = (state = initialState, action) => {\r\n    if (action.type === 'SET_SORT_BY') {\r\n        return {\r\n            ...state,\r\n            sortBy: action.payload\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SET_SORT_ORDER') {\r\n        return {\r\n            ...state,\r\n            sortOrder: action.payload,\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SET_CATEGORIES') {\r\n        return {\r\n            ...state,\r\n            categories: action.payload\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SET_ACTIVE_CATEGORY') {\r\n        return {\r\n            ...state,\r\n            activeCategory: action.payload\r\n        }\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\nexport default filters;","const initialState = {\r\n    items: [],\r\n    isLoaded: false\r\n}\r\n\r\nconst advantages = (state = initialState, action) => {\r\n    if (action.type === 'SET_ADVANTAGES') {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            isLoaded: true\r\n        };\r\n    }\r\n    return state;\r\n};\r\n\r\n\r\nexport default advantages;","const initialState = {\r\n    items: {},\r\n    totalCount: 0,\r\n    totalPrice: 0\r\n}\r\n\r\nconst updateCart = (state, id) => {\r\n    const newObj = Object.keys(state).filter(key =>\r\n        key !== `${id}`).reduce((obj, key) => {\r\n            obj[key] = state[key];\r\n            return obj;\r\n        }, {});\r\n    return newObj;\r\n}\r\n\r\nconst cart = (state = initialState, action) => {\r\n    const payload = action.payload;\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ITEM_TO_CART':\r\n            const id = payload.id;\r\n            const item = state.items[id];\r\n\r\n            return {\r\n                ...state,\r\n                items: {\r\n                    ...state.items,\r\n                    [id]: !item ? [payload] : [...state.items[id], payload]\r\n                },\r\n                itemTotalCount: {\r\n                    ...state.itemTotalCount,\r\n                    [id]: item ? state.itemTotalCount[id] + 1 : 1\r\n                },\r\n                itemTotalPrice: {\r\n                    ...state.itemTotalPrice,\r\n                    [id]: item ? state.itemTotalPrice[id] + payload.price : payload.price\r\n                },\r\n                totalCount: state.totalCount + 1,\r\n                totalPrice: state.totalPrice + payload.price\r\n            };\r\n\r\n        case 'MINUS_CART_ITEM':\r\n            const [remove, ...newItemsList] = state.items[payload];\r\n\r\n            return {\r\n                ...state,\r\n                items: {\r\n                    ...state.items,\r\n                    [payload]: newItemsList\r\n                },\r\n                itemTotalPrice: {\r\n                    ...state.itemTotalPrice,\r\n                    [payload]: state.itemTotalPrice[payload] - remove.price\r\n                },\r\n                itemTotalCount: {\r\n                    ...state.itemTotalCount,\r\n                    [payload]: state.itemTotalCount[payload] - 1\r\n                },\r\n                totalCount: state.totalCount - 1,\r\n                totalPrice: state.totalPrice - remove.price\r\n            };\r\n\r\n        case 'REMOVE_CART_ITEM':\r\n            return {\r\n                ...state,\r\n                items: updateCart(state.items, payload),\r\n                itemTotalPrice: updateCart(state.itemTotalPrice, payload),\r\n                itemTotalCount: updateCart(state.itemTotalCount, payload),\r\n                totalCount: state.totalCount - state.itemTotalCount[payload],\r\n                totalPrice: state.totalPrice - state.itemTotalPrice[payload],\r\n            };\r\n\r\n        case 'CLEAR_CART':\r\n            return {\r\n                items: {},\r\n                totalCount: 0,\r\n                totalPrice: 0\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cart;","const initialState = {\r\n    role: 'USER',\r\n    isAuth: false,\r\n    email: '',\r\n    name: '',\r\n    id: '',\r\n    phone: ''\r\n}\r\n\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_IS_AUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload,\r\n            };\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case 'SET_ROLE':\r\n            return {\r\n                ...state,\r\n                role: action.payload\r\n            };\r\n        case 'SET_USER_LOGOUT':\r\n            return {\r\n                role: 'USER',\r\n                isAuth: false,\r\n                email: '',\r\n                name: '',\r\n                id: '',\r\n                phone: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default user;","const initialState = {\r\n    items: [],\r\n    pageOrders: 1,\r\n    totalCount: 0,\r\n    limit: 10,\r\n    isLoaded: false,\r\n    isLoadedOrderItems: false,\r\n}\r\n\r\n// {\r\n//     id: 2,\r\n//     orderNumber: '444 555 888',\r\n//     totalAmount: '13002',\r\n//     date: '15/25/21',\r\n//     goods: [{\r\n//         id: 22,\r\n//         name: 'Water 1',\r\n//         img: 'b221a67f-0662-4d64-a123-ea3223948eab.jpeg',\r\n//         price: 150\r\n//     },\r\n//     {\r\n//         id: 23,\r\n//         name: 'Water 2',\r\n//         img: 'b221a67f-0662-4d64-a123-ea3223948eab.jpeg',\r\n//         price: 150\r\n//     }]\r\n// }\r\n\r\nconst orders = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ORDERS':\r\n            const itemsOrder = {};\r\n\r\n            for (let i = 0; i < action.payload.length; i++) {\r\n\r\n                if (!itemsOrder[action.payload[i].orderNumber]) {\r\n                    itemsOrder[action.payload[i].orderNumber] = [];\r\n                }\r\n\r\n                itemsOrder[action.payload[i].orderNumber].push(action.payload[i]);\r\n            }\r\n\r\n            const stateOrders = [];\r\n\r\n            for (let key in itemsOrder) {\r\n                const order = {};\r\n                order.orderNumber = itemsOrder[key][0].orderNumber;\r\n                order.userName = itemsOrder[key][0].userName;\r\n                order.userEmail = itemsOrder[key][0].userEmail;\r\n                order.userPhone = itemsOrder[key][0].userPhone;\r\n                order.id = itemsOrder[key][0].id;\r\n                order.totalAmount = itemsOrder[key][0].amount;\r\n                order.date = itemsOrder[key][0].createdAt;\r\n                order.goods = [];\r\n\r\n                stateOrders.push(order);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items: [...stateOrders],\r\n                isLoaded: true\r\n            };\r\n\r\n        case 'SET_ORDERS_ITEMS':\r\n            const orderId = action.payload[0].orderNumber;\r\n            let newStateItems;\r\n\r\n            for (let i = 0; i < state.items.length; i++) {\r\n\r\n                newStateItems = [\r\n                    ...state.items\r\n                ]\r\n\r\n                if (state.items[i].orderNumber === orderId) {\r\n                    newStateItems[i].goods = [...action.payload];\r\n                } else {\r\n                    newStateItems[i].goods = [...state.items[i].goods];\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items: newStateItems ? [...newStateItems] : [],\r\n                isLoaded: true\r\n            };\r\n\r\n        case 'SET_ORDERS_LOADED':\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload\r\n            };\r\n        case 'SET_ORDERS_ITEMS_LOADED':\r\n            return {\r\n                ...state,\r\n                isLoadedOrderItems: action.payload\r\n            };\r\n        case 'SET_ORDERS_PAGE':\r\n            return {\r\n                ...state,\r\n                pageOrders: action.payload,\r\n            };\r\n        case 'SET_LIMIT':\r\n            return {\r\n                ...state,\r\n                limit: action.payload,\r\n            };\r\n        case 'SET_TOTAL_COUNT':\r\n            return {\r\n                ...state,\r\n                totalCount: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default orders;","import { combineReducers } from 'redux';\r\n\r\nimport goods from './goods';\r\nimport filters from './filters';\r\nimport advantages from './advantages';\r\nimport cart from './cart';\r\nimport user from './user';\r\nimport orders from './orders';\r\n\r\nconst rootReducer = combineReducers({\r\n    goods,\r\n    filters,\r\n    advantages,\r\n    cart,\r\n    user,\r\n    orders\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }) => {\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0      \r\n    });\r\n  }, [pathname]);\r\n\r\n  return children || null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);","import axios from 'axios';\r\n\r\nclass ApiServices {\r\n  _baseUrl = process.env.NODE_ENV === 'production' ? 'api/' : `${process.env.REACT_APP_API_URL}api/`;\r\n\r\n  getResource = async (url) => {\r\n    const res = await fetch(`${this._baseUrl}${url}`)\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, received ${res.status}`);\r\n    }\r\n    const body = res.json();\r\n    return body;\r\n  }\r\n\r\n  getOrders = async (page, limit, userId) => {\r\n    const { data } = await axios.get(`${this._baseUrl}order`, {\r\n      params: {\r\n        userId,\r\n        limit,\r\n        page\r\n      }\r\n    })\r\n\r\n    return data;\r\n  }\r\n\r\n  getOrdersItems = async (orderId) => {\r\n    const { data } = await axios.get(`${this._baseUrl}order/items`, {\r\n      params: {\r\n        orderId: orderId\r\n      }\r\n    });\r\n    return data;\r\n  }\r\n\r\n  getUsers = async (limit, page) => {\r\n    const { data } = await axios.get(`${this._baseUrl}user`, {\r\n      params: {\r\n        limit: limit,\r\n        page: page\r\n      }\r\n    })\r\n\r\n    return data;\r\n  }\r\n\r\n  getProductByCatId = async (catId) => {\r\n    const { data } = await axios.get(`${this._baseUrl}product/byCategory/${catId}`)\r\n    return data;\r\n  }\r\n\r\n  getShopItemById = async (id) => {\r\n    const { data } = await axios.get(`${this._baseUrl}product/${id}`)\r\n    return data;\r\n  }\r\n\r\n  getShopCategories = async () => {\r\n    const items = await this.getResource(`category`);\r\n    return items;\r\n  }\r\n\r\n  getAdvantages = async () => {\r\n    const items = await this.getResource(`advantages`);\r\n    return items;\r\n  }\r\n\r\n}\r\n\r\nconst apiServices = new ApiServices();\r\n\r\nexport default apiServices;\r\n\r\n","import apiServices from '../../services/api-services';\r\n\r\nconst fetchCategories = () => (dispatch) => {\r\n    apiServices.getShopCategories().then(data => {\r\n        dispatch(setCategories(data));\r\n    })\r\n}\r\n\r\nconst setCategories = (items) => ({\r\n    type: 'SET_CATEGORIES',\r\n    payload: items\r\n});\r\n\r\nconst setActiveCategory = (index) => ({\r\n    type: 'SET_ACTIVE_CATEGORY',\r\n    payload: index\r\n});\r\n\r\nconst setSortBy = (name) => ({\r\n    type: 'SET_SORT_BY',\r\n    payload: name\r\n});\r\n\r\nconst setSortOrder = (name) => ({\r\n    type: 'SET_SORT_ORDER',\r\n    payload: name\r\n});\r\n\r\n\r\nexport {\r\n    setSortBy,\r\n    setCategories,\r\n    setActiveCategory,\r\n    fetchCategories,\r\n    setSortOrder\r\n};\r\n\r\n","import axios from \"axios\";\r\n\r\nconst _baseUrl = process.env.NODE_ENV === 'production' ? '/' : `${process.env.REACT_APP_API_URL}/`;\r\n\r\nconst $host = axios.create({\r\n    baseURL: _baseUrl\r\n})\r\n\r\nconst $authHost = axios.create({\r\n    baseURL: _baseUrl\r\n})\r\n\r\nconst authIterceptor = config => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`\r\n    return config\r\n}\r\n\r\n$authHost.interceptors.request.use(authIterceptor)\r\n\r\nexport {\r\n    $host,\r\n    $authHost\r\n}","import { $authHost, $host } from './http';\r\n\r\n// products\r\nexport const getProductById = async (id) => {\r\n    const { data } = await $host.get('api/product/' + id)\r\n    return data\r\n}\r\n\r\nexport const getAllProducts = async (sortBy, categoryId, sortOrder, page, limit) => {\r\n    const { data } = await $host.get('api/product/', {\r\n        params: {\r\n            categoryId,\r\n            sortOrder,\r\n            sortBy,\r\n            limit,\r\n            page\r\n        }\r\n    })\r\n    return data;\r\n}\r\n\r\nexport const createProduct = async (product) => {\r\n    const { data } = await $authHost.post('api/product', product)\r\n    return data\r\n}\r\n\r\nexport const updateProduct = async (product, id) => {\r\n    const { data } = await $authHost.patch('api/product/' + id, product)\r\n    return data\r\n}\r\n\r\nexport const deleteProduct = async (id) => {\r\n    const { data } = await $authHost.delete('api/product/' + id)\r\n    return data\r\n}\r\n\r\nexport const getProductByCatId = async (id) => {\r\n    const { data } = await $host.get('api/product/byCategory/' + id)\r\n    return data;\r\n}\r\n\r\n// categories\r\n\r\nexport const createCategory = async (category) => {\r\n    const { data } = await $authHost.post('api/category', category)\r\n    return data\r\n}\r\n\r\nexport const deleteCategory = async (id) => {\r\n    const { data } = await $authHost.delete('api/category/' + id)\r\n    return data\r\n}\r\n\r\nexport const updateCategory = async (name, id) => {\r\n    const { data } = await $authHost.patch('api/category/' + id, name)\r\n    return data\r\n}\r\n\r\n// components\r\n\r\nexport const updateComponent = async (id, item) => {\r\n    const { data } = await $authHost.patch('api/component/' + id, item)\r\n    return data\r\n}\r\n\r\nexport const getComponentInfoByName = async (name) => {\r\n    const { data } = await $host.get('api/component/getByName/' + name)\r\n    return data;\r\n}\r\n\r\n// advantages\r\n\r\nexport const createAdvantages = async (advantage) => {\r\n    const { data } = await $authHost.post('api/advantages', advantage)\r\n    return data\r\n}\r\n\r\nexport const deleteAdvantages = async (id) => {\r\n    const { data } = await $authHost.delete('api/advantages/' + id)\r\n    return data\r\n}\r\n\r\nexport const updateAdvantages = async (obj) => {\r\n    const { data } = await $authHost.patch('api/advantages/' + obj.id, obj.item)\r\n    return data\r\n}\r\n\r\n// orders\r\n\r\nexport const deleteOrders = async (id) => {\r\n    const { data } = await $authHost.delete('api/order/' + id)\r\n    return data\r\n}","import { getProductById, getAllProducts } from '../../services/productsAPI';\r\n\r\nconst setLoaded = (payload) => ({\r\n    type: 'SET_LOADED',\r\n    payload,\r\n})\r\n\r\nconst fetchGoods = (sortBy, category, sortOrder, page, limit) => (dispatch) => {\r\n    dispatch(setLoaded(false));\r\n    getAllProducts(sortBy, category, sortOrder, page, limit).then(data => {\r\n        dispatch(setGoods(data.rows));\r\n        dispatch(setTotalCount(data.count));\r\n    })\r\n}\r\n\r\nconst fetchPopularGoods = (catId) => (dispatch) => {\r\n\r\n    const page = 1;\r\n    const limit = 4;\r\n    const sortOrder = 'desc';\r\n    const sortBy = 'rating'\r\n\r\n    dispatch(setLoaded(false));\r\n    getAllProducts(sortBy, catId, sortOrder, page, limit).then(data => {\r\n        dispatch(setPopularGoods(data.rows));\r\n    })\r\n}\r\n\r\nconst fetchItemDetails = (id) => (dispatch) => {\r\n    dispatch(setLoaded(false));\r\n    getProductById(id).then(data => {\r\n        dispatch(setItemDetails(data));\r\n    })\r\n}\r\n\r\nconst setGoods = (items) => ({\r\n    type: 'SET_GOODS',\r\n    payload: items\r\n});\r\n\r\nconst setPopularGoods = (items) => ({\r\n    type: 'SET_POPULAR_GOODS',\r\n    payload: items\r\n});\r\n\r\nconst setItemDetails = (itemDetails) => ({\r\n    type: 'SET_ITEM_DETAILS',\r\n    payload: itemDetails\r\n});\r\n\r\nconst setPage = (pageNumber) => ({\r\n    type: 'SET_PAGE',\r\n    payload: pageNumber\r\n});\r\n\r\nconst setLimit = (limitGoods) => ({\r\n    type: 'SET_LIMIT',\r\n    payload: limitGoods\r\n});\r\n\r\nconst setTotalCount = (totalCount) => ({\r\n    type: 'SET_TOTAL_COUNT',\r\n    payload: totalCount\r\n});\r\n\r\nexport {\r\n    setGoods,\r\n    fetchGoods,\r\n    setLoaded,\r\n    fetchPopularGoods,\r\n    fetchItemDetails,\r\n    setPage,\r\n    setTotalCount,\r\n    setLimit\r\n};","import apiServices from '../../services/api-services';\r\n\r\nconst fetchAdvantages = () => (dispatch) => {\r\n    apiServices.getAdvantages().then(data => {\r\n        dispatch(setAdvantages(data));\r\n    })\r\n}\r\n\r\nconst setAdvantages = (items) => ({\r\n    type: 'SET_ADVANTAGES',\r\n    payload: items\r\n});\r\n\r\nexport {\r\n    setAdvantages,\r\n    fetchAdvantages,\r\n};","const addItemToCart = (obj) => ({\r\n    type: 'ADD_ITEM_TO_CART',\r\n    payload: obj\r\n});\r\n\r\nconst clearCart = () => ({\r\n    type: 'CLEAR_CART'\r\n});\r\n\r\nconst removeCartItem = (id) => ({\r\n    type: 'REMOVE_CART_ITEM',\r\n    payload: id\r\n});\r\n\r\nconst plusCartItem = (id) => ({\r\n    type: 'PLUS_CART_ITEM',\r\n    payload: id\r\n});\r\n\r\nconst minusCartItem = (id) => ({\r\n    type: 'MINUS_CART_ITEM',\r\n    payload: id\r\n});\r\n\r\nexport { addItemToCart, clearCart, removeCartItem, minusCartItem, plusCartItem };","const setIsAuth = (bool) => ({\r\n    type: 'SET_IS_AUTH',\r\n    payload: bool\r\n});\r\n\r\nconst setUser = (user) => ({\r\n    type: 'SET_USER',\r\n    payload: user\r\n});\r\n\r\nconst setRole = (role) => ({\r\n    type: 'SET_ROLE',\r\n    payload: role\r\n});\r\n\r\nconst setUserLogout = () => ({\r\n    type: 'SET_USER_LOGOUT'\r\n});\r\n\r\nexport { setIsAuth, setUser, setRole, setUserLogout };","import apiServices from '../../services/api-services';\r\n\r\nconst setOrdersLoaded = (payload) => ({\r\n    type: 'SET_ORDERS_LOADED',\r\n    payload,\r\n})\r\n\r\nconst setOrdersItemsLoaded = (payload) => ({\r\n    type: 'SET_ORDERS_ITEMS_LOADED',\r\n    payload,\r\n})\r\n\r\nconst fetchOrders = (page, limit, userId) => (dispatch) => {\r\n    dispatch(setOrdersLoaded(false));\r\n\r\n    apiServices.getOrders(page, limit, userId).then(data => {\r\n        dispatch(setOrders(data.rows));\r\n        dispatch(setOrdersTotalCount(data.count));\r\n    })\r\n}\r\nconst fetchOrdersItems = (orderId) => (dispatch) => {\r\n    dispatch(setOrdersItemsLoaded(false));\r\n\r\n    apiServices.getOrdersItems(orderId).then(data => {\r\n        dispatch(setOrdersItems(data.rows));\r\n    })\r\n}\r\n\r\nconst setOrders = (items) => ({\r\n    type: 'SET_ORDERS',\r\n    payload: items\r\n});\r\n\r\nconst setOrdersItems = (items) => ({\r\n    type: 'SET_ORDERS_ITEMS',\r\n    payload: items\r\n});\r\n\r\nconst setOrdersPage = (pageNumber) => ({\r\n    type: 'SET_ORDERS_PAGE',\r\n    payload: pageNumber\r\n});\r\n\r\nconst setOrdersLimit = (limitGoods) => ({\r\n    type: 'SET_LIMIT',\r\n    payload: limitGoods\r\n});\r\n\r\nconst setOrdersTotalCount = (totalCount) => ({\r\n    type: 'SET_TOTAL_COUNT',\r\n    payload: totalCount\r\n});\r\n\r\nexport {\r\n    setOrders,\r\n    fetchOrders,\r\n    setOrdersLoaded,\r\n    setOrdersPage,\r\n    setOrdersTotalCount,\r\n    setOrdersLimit,\r\n    fetchOrdersItems\r\n};","const _baseImgUrl = process.env.NODE_ENV === 'production' ? '/img/' : `${process.env.REACT_APP_API_URL}img/`;\r\n\r\nexport const Routes = {\r\n    LOGIN_ROUTE: '/login',\r\n    REGISTRATION_ROUTE: '/registration',\r\n    HOME_ROUTE: '/',\r\n    ABOUT_ROUTE: '/about-us',\r\n    CONTACTS_ROUTE: '/contacts',\r\n    PAYMENT_DELIVERY_ROUTE: '/payment-delivery',\r\n    CART_ROUTE: '/cart',\r\n    SHOP_ROUTE: '/shop',\r\n    SHOP_ITEM_ROUTE: '/shop/:id',\r\n    USERS_LIST: '/users-list',\r\n    ORDERS_LIST: '/orders-list',\r\n    USER_PROFILE: '/user-profile',\r\n    USER_RESET_PASSWORD: '/reset-password/:id/:token',\r\n}\r\n\r\nexport const UserRoles = {\r\n    ADMIN: 'ADMIN',\r\n    MODERATOR: 'MODERATOR',\r\n    USER: 'USER',\r\n}\r\n\r\nexport const ComponentName = {\r\n    HOME: 'home',\r\n    FOOTER: 'footer',\r\n    ABOUT_US: 'about_us',\r\n    PAYMENT: 'payment_delivery',\r\n    CONTACTS: 'contacts',\r\n}\r\n\r\nexport const UserDefault = {\r\n    IMAGE: 'default_avatar.jpg'\r\n}\r\n\r\nexport const ProductDefault = {\r\n    IMAGE: 'deleted.png'\r\n}\r\n\r\nexport const ImgUrlDefault = {\r\n    ADVANTAGES: `${_baseImgUrl}advantages/`,\r\n    COMPONENTS: `${_baseImgUrl}components/`,\r\n    PRODUCTS: `${_baseImgUrl}products/`,\r\n    USERS: `${_baseImgUrl}users/`,\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Routes } from '../../utils/consts';\r\n\r\nimport './main-navigation.scss';\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <ul className=\"main-navigation\">\r\n            <li>\r\n                <Link to={Routes.HOME_ROUTE}> Головна </Link>\r\n            </li>\r\n            <li>\r\n                <Link to={Routes.ABOUT_ROUTE}> Про нас </Link>\r\n            </li>\r\n            <li>\r\n                <Link to={Routes.CONTACTS_ROUTE}> Контакти </Link>\r\n            </li>\r\n            <li>\r\n                <Link to={Routes.SHOP_ROUTE}> Магазин </Link>\r\n            </li>\r\n            <li>\r\n                <Link to={Routes.PAYMENT_DELIVERY_ROUTE}> Доставка і оплата </Link>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default MainNavigation\r\n","import MainNavigation from './main-navigation';\r\n\r\nexport default MainNavigation;","export default __webpack_public_path__ + \"static/media/logo.6733eb09.png\";","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Logo from '../../assets/images/logo.png';\r\nimport { Routes } from '../../utils/consts';\r\nimport './main-logo.scss';\r\n\r\nfunction MainLogo({ classNames }) {\r\n\r\n    const className = !classNames ? `logo-wrapper` : `${classNames} logo-wrapper`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Link to={Routes.HOME_ROUTE}>\r\n                <div className=\"main__logo\">\r\n                    <img src={Logo} alt=\"logo\" />\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainLogo\r\n","import MainLogo from './main-logo';\r\n\r\nexport default MainLogo;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Routes } from '../../utils/consts';\r\n\r\nimport './login-panel.scss';\r\n\r\nfunction LoginPanel() {\r\n\r\n    return (\r\n        <ul className=\"login-panel\">\r\n            <li><Link to={Routes.LOGIN_ROUTE}> Увійти </Link></li>\r\n            <li><Link to={Routes.REGISTRATION_ROUTE}> Реєстрація </Link></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default LoginPanel\r\n","import LoginPanel from './login-panel';\r\nexport default LoginPanel;","import React from 'react';\r\n\r\nimport MainLogo from '../main-logo';\r\nimport MainNavigation from '../main-navigation';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport LoginPanel from '../login-panel';\r\n\r\nimport './mobile-menu.scss';\r\n\r\nfunction MobileMenu() {\r\n    const [showMenu, setShowMenu] = React.useState(false);\r\n    const { isAuth } = useSelector(({ user }) => user);\r\n\r\n    const toggleMenu = () => {\r\n        setShowMenu(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"mobile-menu-wrapper\">\r\n            <div className=\"mobile-btn-menu\" onClick={toggleMenu}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n\r\n            <div onClick={toggleMenu} className={!showMenu ? \"mobile-menu\" : \"mobile-menu show-menu\"}>\r\n                <MainLogo />\r\n                <MainNavigation />\r\n                {!isAuth && <LoginPanel />}\r\n            </div>\r\n\r\n            <div\r\n                className={showMenu ? \"bg-mobile-menu\" : \"bg-mobile-menu d-none\"}\r\n                onClick={toggleMenu}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileMenu;\r\n","import MobileMenu from './mobile-menu';\r\n\r\nexport default MobileMenu;","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUserLogout } from '../../../redux/actions';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { transformedUserName } from '../../../helpers/transformedUserName';\r\n\r\nimport './user-panel.scss';\r\nimport { Routes, UserDefault, UserRoles, ImgUrlDefault } from '../../../utils/consts';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction UserPanel() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const { name, image, role, isAuth } = useSelector(({ user }) => user);\r\n\r\n    const userName = transformedUserName(name);\r\n\r\n    const logOut = () => {\r\n        dispatch(setUserLogout());\r\n        const pathname = history.location.pathname;\r\n\r\n        if (pathname === Routes.ORDERS_LIST ||\r\n            pathname === Routes.USER_PROFILE ||\r\n            pathname === Routes.USERS_LIST) {\r\n            history.push('/')\r\n        }\r\n\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    const isAdmin = role === UserRoles.ADMIN && isAuth;\r\n\r\n    const imageUrl = !image ? UserDefault.IMAGE : image;\r\n\r\n    return (\r\n        <div className=\"user-panel\">\r\n            <div className=\"user-img\">\r\n                <img src={`${ImgUrlDefault.USERS}${imageUrl}`} alt=\"user-avatar\" />\r\n            </div>\r\n\r\n            <DropdownButton id=\"dropdown-basic-button\" title={userName}>\r\n\r\n                <Dropdown.Item as={Link} eventKey={\"1\"} to={Routes.USER_PROFILE}>\r\n                    Профіль\r\n                </Dropdown.Item>\r\n\r\n                {isAdmin\r\n                    && <Dropdown.Item as={Link} eventKey={\"4\"} to={Routes.USERS_LIST}>\r\n                        Список користувачів\r\n                    </Dropdown.Item>}\r\n\r\n                <Dropdown.Item as={Link} eventKey={\"2\"} to={Routes.ORDERS_LIST}>\r\n                    Список замовлень\r\n                </Dropdown.Item>\r\n\r\n                <Dropdown.Item onClick={logOut} eventKey={\"3\"}>\r\n                    Вихід\r\n                </Dropdown.Item>\r\n\r\n            </DropdownButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPanel\r\n","import UserPanel from './user-panel';\r\nexport default UserPanel;","export const transformedUserName = (name) => {\r\n    if (name.trim().includes(' ')) {\r\n        return name.split(' ')[0];\r\n    };\r\n    return name.length > 10 ? name.slice(0, 10) + '...' : name;\r\n}","export default __webpack_public_path__ + \"static/media/cart.d7ea8a0a.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport MainNavigation from '../../main-navigation';\r\nimport MainLogo from '../../main-logo';\r\nimport MobileMenu from '../../mobile-menu';\r\nimport UserPanel from '../../user/user-panel'\r\n\r\nimport Cart from '../../../assets/images/cart.png';\r\n\r\nimport './header.scss';\r\nimport LoginPanel from '../../login-panel';\r\n\r\nconst Header = () => {\r\n    const [btnIsHighLighted, setBtnIsHighLighted] = React.useState(false);\r\n\r\n    const { totalPrice, totalCount } = useSelector(({ cart }) => cart);\r\n    const { isAuth } = useSelector(({ user }) => user);\r\n\r\n    const btnCartClasses = `button--cart d-flex mr-a ${btnIsHighLighted ? 'bump' : ''}`\r\n\r\n    React.useEffect(() => {\r\n        if (totalCount === 0) {\r\n            return;\r\n        }\r\n        setBtnIsHighLighted(true);\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHighLighted(false);\r\n        }, 300)\r\n\r\n        return (() => {\r\n            clearTimeout(timer);\r\n        })\r\n    }, [totalCount])\r\n\r\n    return (\r\n        <div className=\"header align-items-center\">\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-1 col-md-5 col-lg-1\">\r\n                        <MobileMenu />\r\n                        <MainLogo classNames={'header-logo'} />\r\n                    </div>\r\n\r\n                    <div className=\"col-md-7 col-lg-6 align-items-center main-menu\">\r\n                        <MainNavigation />\r\n                    </div>\r\n\r\n                    <div className=\"col-11 col-md-7 col-lg-5 d-flex justify-content-end align-items-center\">\r\n\r\n                        {!isAuth ?\r\n                            <div className=\"login-panel-wrapper\"><LoginPanel /></div> : <UserPanel />}\r\n\r\n                        <Link to=\"/cart\">\r\n                            <div className={btnCartClasses}>\r\n                                <span>{totalPrice} ₴</span>\r\n                                <div className=\"button--cart__delimiter\"></div>\r\n                                <img className=\"button--cart__img\" src={Cart} alt=\"cart-img\" />\r\n                                <span>{totalCount}</span>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","import Header from './header';\r\n\r\nexport default Header;","import { useSelector } from 'react-redux';\r\nimport { UserRoles } from '../utils/consts';\r\n\r\nfunction useIsAdmin() {\r\n    const { isAuth, role } = useSelector(({ user }) => user);\r\n    const isAdmin = isAuth && role === UserRoles.ADMIN;\r\n    return isAdmin;\r\n}\r\n\r\nexport default useIsAdmin\r\n","import React, { useState } from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport './TextEditor.css';\r\n\r\nfunction TextEditor({ content, onChangeInfo, fieldName }) {\r\n    const [text, setText] = useState(content);\r\n\r\n    const onSaveShanges = (event, editor) => {\r\n        const data = editor.getData()\r\n        setText(data);\r\n        onChangeInfo(fieldName, text);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"editor\">\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    data={text}\r\n                    config={\r\n                        {\r\n                            fontFamily: {\r\n                                options: [\r\n                                    \"default\",\r\n                                    \"Ubuntu, Arial, sans-serif\",\r\n                                    \"Ubuntu Mono, Courier New, Courier, monospace\",\r\n                                ],\r\n                            },\r\n                            fontSize: {\r\n                                options: [9, 11, 13, \"default\", 17, 19, 21],\r\n                            },\r\n                            toolbar: ['heading', '|', 'bold', 'italic', 'numberedList', 'bulletedList', 'insertTable',\r\n                                'tableColumn', 'tableRow', 'mergeTableCells', '|', 'undo', 'redo', 'fontSize', 'fontFamily'],\r\n                            placeholder: 'Enter the product description'\r\n                        }\r\n                    }\r\n                    onChange={(event, editor) => {\r\n                        onSaveShanges(event, editor);\r\n                    }}\r\n                    onBlur={(event, editor) => {\r\n                        onSaveShanges(event, editor);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextEditor;\r\n","import TextEditor from './TextEditor';\r\n\r\nexport default TextEditor;","import React from 'react';\r\n\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\nimport { Modal, Form, Button, Alert, Col } from 'react-bootstrap';\r\nimport TextEditor from '../text-editor';\r\nimport { updateComponent } from '../../../services/productsAPI';\r\n\r\nimport './admin-components.scss';\r\nimport { ImgUrlDefault } from '../../../utils/consts';\r\n\r\nfunction AdminComponentsEdit({ data, updateData }) {\r\n    const [modalVisible, setModalVisible] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    const [nameCount, setNameCount] = React.useState(0);\r\n    const [inputsValue, setInputsValue] = React.useState({ ...data });\r\n\r\n    React.useEffect(() => {\r\n        setInputsValue({ ...data })\r\n    }, [data])\r\n\r\n    const onShow = () => {\r\n        setInputsValue({ ...data })\r\n        setNameCount(data.title.length)\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalVisible(false)\r\n    }\r\n\r\n    const onHandleSubmit = () => {\r\n        if (typeof inputsValue.img === 'object') {\r\n            const img = inputsValue.img;\r\n\r\n            const fileType = img.type.split('/')[0];\r\n\r\n            if (fileType !== 'image') {\r\n                showErrorMsg('Помилка! Заборонений тип файлу!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let key in inputsValue) {\r\n            if (inputsValue[key] === '') {\r\n                showErrorMsg('Помилка! Заповнено не всі поля');\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!inputsValue.title.replace(/\\s/g, '').length) {\r\n            showErrorMsg('Помилка! Не вказана назва!');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('title', inputsValue.title);\r\n            formData.append('text', inputsValue.text);\r\n            typeof inputsValue.img !== 'string' && formData.append('img', inputsValue.img);\r\n            updateComponent(data.id, formData).then(data => {\r\n                updateData();\r\n                closeModal();\r\n            })\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    const updateState = (field, newValue) => {\r\n        field === 'title' && setNameCount(newValue.length);\r\n\r\n        setInputsValue({\r\n            ...inputsValue,\r\n            [field]: newValue\r\n        });\r\n    }\r\n\r\n    const selectFile = (e) => {\r\n        setInputsValue({\r\n            ...inputsValue,\r\n            img: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    const showErrorMsg = (text) => {\r\n        setError(text);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"editBtn\" onClick={onShow}>\r\n                <PencilSquare />\r\n            </div>\r\n\r\n            <div onClick={e => e.stopPropagation()}>\r\n\r\n                <Modal size=\"lg\" animation={true} show={modalVisible} onHide={closeModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Редагувати товар</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    {error && <Alert className=\"m-2\" variant={'danger'}>\r\n                        {error}\r\n                    </Alert>}\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridName\">\r\n                                    <Form.Label>\r\n                                        <b>Заголовок: <span\r\n                                            className={nameCount > 60 ? 'text-danger' : ''}>\r\n                                            ({nameCount})</span>\r\n                                        </b>\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        onChange={e => updateState('title', e.target.value)}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter the product name\"\r\n                                        value={inputsValue && inputsValue.title}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <div className=\"shop-item-details__image mt-2 admin-image-edit\">\r\n                                    <img src={`${ImgUrlDefault.COMPONENTS}${data.img}`} alt=\"item pictures\" />\r\n                                </div>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridImage\" className=\"mt-4\">\r\n                                    <Form.Control\r\n                                        onChange={selectFile}\r\n                                        type=\"file\"\r\n                                        placeholder=\"Enter the image url\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"formGridDesc\" className=\"mt-4\">\r\n                                <Form.Label> <b> Текст: </b> </Form.Label>\r\n\r\n                                <TextEditor onChangeInfo={updateState} fieldName={'text'} content={inputsValue.text} />\r\n                            </Form.Group>\r\n\r\n                            <hr />\r\n\r\n                            <Button variant=\"secondary\" onClick={closeModal}>\r\n                                Відмінити\r\n                            </Button>\r\n\r\n                            <Button className=\"m-2\" variant=\"primary\" type=\"button\" onClick={onHandleSubmit}>\r\n                                Зберегти\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminComponentsEdit\r\n","import React from 'react';\r\nimport parse from 'html-react-parser';\r\nimport { AdminComponentsEdit } from '../../../admin/admin-components';\r\nimport { ImgUrlDefault } from '../../../../utils/consts';\r\n\r\nfunction FooterItem({ item, updateFooterInfo, isAdmin }) {\r\n    return (\r\n        <div key={item.id} className=\"col-12 col-md-3 d-flex align-items-center footer-block\">\r\n            <div className=\"footer__icon\">\r\n                {item.img && <img src={`${ImgUrlDefault.COMPONENTS}${item.img}`} className=\"img-fluid\" alt=\"main logo\" />}\r\n            </div>\r\n\r\n            <div className=\"footer__text\">\r\n                {parse(`${item.text}`)}\r\n            </div>\r\n            {isAdmin ? <div className=\"footer-editBtn\">\r\n                <AdminComponentsEdit data={item} updateData={updateFooterInfo} />\r\n            </div> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterItem\r\n","import FooterItem from './footer-item';\r\nexport default FooterItem;","import React from 'react';\r\nimport { getComponentInfoByName } from '../../../services/productsAPI';\r\nimport { ComponentName } from '../../../utils/consts';\r\nimport useIsAdmin from '../../../hooks/useIsAdmin';\r\nimport FooterItem from './footer-item';\r\n\r\nimport MainLogo from '../../main-logo';\r\n\r\nimport './footer.scss';\r\n\r\nfunction Footer() {\r\n    const isAdmin = useIsAdmin();\r\n\r\n    const [footerInfo, setFooterInfo] = React.useState({});\r\n\r\n    React.useEffect(() => {\r\n        updateFooterInfo();\r\n    }, [])\r\n\r\n    const updateFooterInfo = () => {\r\n        getComponentInfoByName(ComponentName.FOOTER).then(data => {\r\n            setFooterInfo(data)\r\n        })\r\n    }\r\n\r\n    const content = footerInfo.length > 0 && footerInfo.map(item => {\r\n        return <FooterItem\r\n            key={item.id}\r\n            item={item}\r\n            updateFooterInfo={updateFooterInfo}\r\n            isAdmin={isAdmin}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <footer>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex col-md-2 align-items-center text-center footer-block\">\r\n                        <MainLogo />\r\n                    </div>\r\n\r\n                    {content}\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"text-center footer-text-author\">\r\n                    developed by <a href=\"https://www.facebook.com/anton.adart\" target=\"_blank\" rel=\"noreferrer\">Anton Vasylchenko</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import Footer from './footer';\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-double-ring mt-2 mb-2\">\r\n      <div className=\"ldio\">\r\n        <div></div>\r\n        <div></div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport './back-arrow.scss';\r\n\r\nfunction BackArrow() {\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"back-arrow\" onClick={() => history.goBack()}>\r\n                <svg viewBox=\"0 0 24 24\"><g>\r\n                    <path className=\"arrow-icon\" d=\"M20 11H7.414l4.293-4.293c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0l-6 6c-.39.39-.39 1.023 0 1.414l6 6c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L7.414 13H20c.553 0 1-.447 1-1s-.447-1-1-1z\"></path>\r\n                </g></svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackArrow;\r\n","import BackArrow from './back-arrow';\r\n\r\nexport default BackArrow;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../spinner';\r\nimport BackArrow from '../back-arrow';\r\n\r\nimport './container.scss';\r\n\r\nfunction Container({ title, children, backArrow, isLoaded = true }) {\r\n\r\n    const mainTitle = title ? <h4>{title}</h4> : null;\r\n    const backArrowBtn = backArrow ? <BackArrow /> : '';\r\n    const loading = isLoaded ? children : <Spinner />\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main-wrapper\">\r\n                <div className=\"container-title\">\r\n                    {backArrowBtn}\r\n                    {mainTitle}\r\n                </div>\r\n                <div className=\"content\">\r\n                    {loading}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nContainer.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n    backArrow: PropTypes.bool,\r\n    isLoaded: PropTypes.bool\r\n};\r\n\r\nexport default Container\r\n","import Container from './container';\r\nexport default Container;","import React from 'react';\r\nimport { Modal, Button, Col, Form, Dropdown, Alert, } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TextEditor from '../text-editor';\r\nimport { setActiveCategory } from '../../../redux/actions';\r\n\r\nfunction AdminProductsForm({ show, handleNo, handleSubmit }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const { activeCategory, categories } = useSelector(({ filters }) => filters);\r\n\r\n    const [error, setError] = React.useState(false);\r\n    const [nameCount, setNameCount] = React.useState(0);\r\n    const [selectedImage, setSelectedImage] = React.useState('');\r\n\r\n    const [inputsValue, setInputsValue] = React.useState({\r\n        name: '',\r\n        img: '',\r\n        price: '',\r\n        description: ''\r\n    });\r\n\r\n    const updateState = (field, newValue) => {\r\n        field === 'name' && setNameCount(newValue.length);\r\n\r\n        setInputsValue({\r\n            ...inputsValue,\r\n            [field]: newValue\r\n        });\r\n    }\r\n\r\n    const onHandleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (activeCategory === null) {\r\n            showErrorMsg('Помилка! Виберіть категорію!');\r\n            return;\r\n        }\r\n\r\n        if (!inputsValue.price.trim().length === 0) {\r\n            showErrorMsg('Помилка! Товар не може бути без назви!');\r\n            return;\r\n        }\r\n\r\n        if (inputsValue.price.trim().length === 0) {\r\n            showErrorMsg('Помилка! Не вказана ціна');\r\n            return;\r\n        }\r\n\r\n        if (inputsValue.description.trim().length === 0) {\r\n            showErrorMsg('Помилка! Не вказаний опис');\r\n            return;\r\n        }\r\n\r\n        if (typeof inputsValue.img !== 'object') {\r\n            showErrorMsg('Помилка! Ви не обрали зображення');\r\n            return;\r\n        }\r\n\r\n        const img = inputsValue.img;\r\n        const fileType = img.type.split('/')[0];\r\n\r\n        if (fileType !== 'image') {\r\n            showErrorMsg('Помилка! Заборонений тип файлу!');\r\n            return;\r\n        }\r\n\r\n        if (nameCount > 40) {\r\n            showErrorMsg(`Помилка! Ім'я не повинно перевищувати 40 символів`);\r\n            return;\r\n        }\r\n\r\n        if (inputsValue.price > 2147483647) {\r\n            showErrorMsg(`Помилка! Невірно вказана ціна`);\r\n            return;\r\n        }\r\n\r\n        const product = {\r\n            ...inputsValue\r\n        }\r\n\r\n        clearForm();\r\n\r\n        handleNo();\r\n        handleSubmit(product);\r\n    }\r\n\r\n    const onCancelHandle = () => {\r\n        handleNo();\r\n        setError(false);\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setInputsValue({\r\n            name: '',\r\n            img: '',\r\n            price: '',\r\n            description: ''\r\n        });\r\n\r\n        setSelectedImage('');\r\n\r\n        setNameCount(0);\r\n        setError(false);\r\n    }\r\n\r\n    const selectFile = (e) => {\r\n        setSelectedImage(e.target.files[0]);\r\n        setInputsValue({\r\n            ...inputsValue,\r\n            img: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    const showErrorMsg = (text) => {\r\n        setError(text);\r\n    }\r\n\r\n    const changeCategory = (value) => {\r\n        dispatch(setActiveCategory(value));\r\n    }\r\n\r\n    const categoriesDropdown = categories && categories.map((cat, index) => {\r\n        const activeCat = activeCategory === index ? true : false;\r\n\r\n        return (\r\n            <Dropdown.Item\r\n                onClick={() => changeCategory(index)}\r\n                key={cat.id}\r\n                active={activeCat}\r\n            >\r\n                {cat.name}\r\n            </Dropdown.Item>\r\n        )\r\n    })\r\n\r\n    const imgUrl = selectedImage.length !== 0 && URL.createObjectURL(selectedImage);\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" animation={true} show={show} onHide={onCancelHandle}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Створити новий товар</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                {error && <Alert className=\"m-2\" variant={'danger'}>\r\n                    {error}\r\n                </Alert>}\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridName\">\r\n                                <Form.Label>\r\n                                    <b>Name: <span\r\n                                        className={nameCount > 40 ? 'text-danger' : ''}>\r\n                                        ({nameCount})</span>\r\n                                    </b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('name', e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the product name\"\r\n                                    value={inputsValue.name}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Dropdown className=\"mt-4\">\r\n                                <Dropdown.Toggle>\r\n                                    {activeCategory === null ? 'Виберіть категорію' : categories[activeCategory].name}\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    {categoriesDropdown}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridImage\" className=\"mt-4\">\r\n\r\n                                {selectedImage.length !== 0 && <div className=\"shop-item-details__image mt-2\">\r\n                                    <img src={imgUrl} alt=\"item pictures\" />\r\n                                </div>}\r\n\r\n                                <Form.Control\r\n                                    onChange={selectFile}\r\n                                    type=\"file\"\r\n                                    placeholder=\"Enter the image url\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group controlId=\"formGridDesc\" className=\"mt-4\">\r\n                            <Form.Label> <b> Опис: </b> </Form.Label>\r\n\r\n                            <TextEditor onChangeInfo={updateState} content={inputsValue.description} fieldName=\"description\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} className=\"mt-4\" controlId=\"formGridCount\">\r\n                                <Form.Label> <b> Ціна </b></Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('price', e.target.value)}\r\n                                    value={inputsValue.price}\r\n                                    placeholder=\"Ціна\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <hr />\r\n\r\n                        <Button variant=\"secondary\" onClick={onCancelHandle}>\r\n                            Відмінити\r\n                        </Button>\r\n\r\n                        <Button className=\"m-2\" variant=\"primary\" type=\"button\" onClick={onHandleSubmit}>\r\n                            Створити\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminProductsForm;","import React from 'react'\r\nimport AdminProductsForm from './admin-products-form';\r\nimport { Button } from 'react-bootstrap';\r\nimport { createProduct } from '../../../services/productsAPI';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchGoods } from '../../../redux/actions';\r\n\r\nimport './admin-products.scss'\r\n\r\nfunction AdminProductsAdd() {\r\n    const dispatch = useDispatch();\r\n    const { activeCategory, sortBy, sortOrder } = useSelector(({ filters }) => filters);\r\n    const { limit, page } = useSelector(({ goods }) => goods);\r\n\r\n    const [modalVisible, setModalVisible] = React.useState(false);\r\n\r\n    const onShow = () => {\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalVisible(false)\r\n    }\r\n\r\n    const handleSubmit = (product) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('name', product.name);\r\n            formData.append('price', product.price);\r\n            formData.append('description', product.description);\r\n            formData.append('categoryId', activeCategory);\r\n            formData.append('img', product.img);\r\n\r\n            createProduct(formData).then(data => {\r\n                dispatch(fetchGoods(sortBy, activeCategory, sortOrder, page, limit));\r\n                // setModalVisible(false);\r\n            })\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"addBtnProduct text-center mb-4\">\r\n            <Button onClick={onShow}> Додати продукт </Button>\r\n            <AdminProductsForm\r\n                show={modalVisible}\r\n                handleNo={closeModal}\r\n                handleSubmit={handleSubmit}\r\n                action={'create'}\r\n                currentCategory={activeCategory}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AdminProductsAdd\r\n","import React from 'react';\r\n\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nfunction ModalBox({ handleNo, handleYes, show, body, title }) {\r\n\r\n    const onClose = handleNo ? handleNo : handleYes;\r\n\r\n    return (\r\n        <Modal animation={true} show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{body}</Modal.Body>\r\n            <Modal.Footer>\r\n                {handleNo &&\r\n                    <Button variant=\"secondary\" onClick={handleNo}>\r\n                        Скасувати\r\n                    </Button>}\r\n\r\n                <Button variant=\"primary\" onClick={handleYes}>\r\n                    ОК\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalBox;","import ModalBox from './modal-box';\r\nexport default ModalBox;","import React from 'react';\r\nimport ModalBox from '../../UI/modal-box';\r\nimport { deleteProduct } from '../../../services/productsAPI';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchGoods } from '../../../redux/actions';\r\n\r\nfunction AdminProductDelete({ id, name }) {\r\n    const dispatch = useDispatch();\r\n    const { activeCategory, sortBy, sortOrder } = useSelector(({ filters }) => filters);\r\n\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const handleNo = () => setShow(false);\r\n\r\n    const handleYes = () => {\r\n        toggleShow();\r\n\r\n        deleteProduct(id).then(data => {\r\n            dispatch(fetchGoods(sortBy, activeCategory, sortOrder));\r\n        })\r\n    };\r\n\r\n    const toggleShow = () => {\r\n        setShow(!show);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ModalBox\r\n                show={show}\r\n                handleNo={handleNo}\r\n                handleYes={handleYes}\r\n                title={`Видалення: \"${name}\"`}\r\n                body={`Ви дійсно бажаєте видалити товар \"${name}\"?`}\r\n            />\r\n\r\n            <div className=\"product-del\" onClick={toggleShow}>x</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminProductDelete\r\n","import React from 'react';\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Modal, Button, Col, Form, Dropdown, Alert, } from 'react-bootstrap';\r\nimport TextEditor from '../text-editor';\r\nimport { fetchItemDetails, fetchPopularGoods, fetchCategories } from '../../../redux/actions';\r\nimport { updateProduct } from '../../../services/productsAPI';\r\n\r\nimport './admin-products.scss';\r\nimport { ImgUrlDefault } from '../../../utils/consts';\r\n\r\nfunction AdminProductsEdit({ itemDetails }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [modalVisible, setModalVisible] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    const [nameCount, setNameCount] = React.useState(0);\r\n    const [itemCatId, setItemCatId] = React.useState(itemDetails.categoryId);\r\n    const [selectedImage, setSelectedImage] = React.useState('')\r\n\r\n    const [inputsValue, setInputsValue] = React.useState({\r\n        ...itemDetails\r\n    });\r\n\r\n    const { categories } = useSelector(({ filters }) => filters);\r\n\r\n    const onShow = () => {\r\n        setModalVisible(true);\r\n        setItemCatId(itemDetails.categoryId)\r\n\r\n        setInputsValue({\r\n            ...itemDetails\r\n        });\r\n\r\n        setSelectedImage('');\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalVisible(false)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchCategories());\r\n    }, [dispatch])\r\n\r\n    const handleSubmit = (product) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('name', product.name);\r\n            formData.append('price', product.price);\r\n            formData.append('description', product.description);\r\n            typeof product.img !== 'string' && formData.append('img', product.img);\r\n            formData.append('categoryId', product.categoryId);\r\n            updateProduct(formData, itemDetails.id).then(data => {\r\n                dispatch(fetchItemDetails(itemDetails.id));\r\n                dispatch(fetchPopularGoods(itemDetails.categoryId))\r\n            })\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    const updateState = (field, newValue) => {\r\n        field === 'name' && setNameCount(newValue.length);\r\n\r\n        setInputsValue({\r\n            ...inputsValue,\r\n            [field]: newValue\r\n        });\r\n    }\r\n\r\n    const onHandleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (typeof inputsValue.img === 'object') {\r\n            const img = inputsValue.img;\r\n\r\n            const fileType = img.type.split('/')[0];\r\n\r\n            if (fileType !== 'image') {\r\n                showErrorMsg('Помилка! Заборонений тип файлу!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!inputsValue.name.replace(/\\s/g, '').length) {\r\n            showErrorMsg('Помилка! Товар не може бути без назви!');\r\n            return;\r\n        }\r\n\r\n        if (itemDetails.categoryId === null || !categories[inputsValue.categoryId]) {\r\n            showErrorMsg('Помилка! Виберіть категорію!');\r\n            return;\r\n        }\r\n\r\n        for (let key in inputsValue) {\r\n            if (inputsValue[key] === '') {\r\n                showErrorMsg('Помилка! Заповнено не всі поля');\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (nameCount > 40) {\r\n            showErrorMsg(`Помилка! Ім'я не повинно перевищувати 40 символів`);\r\n            return;\r\n        }\r\n\r\n        if (+inputsValue.price > Number.MAX_SAFE_INTEGER) {\r\n            showErrorMsg(`Помилка! Невірно вказана ціна`);\r\n            return;\r\n        }\r\n\r\n        const product = {\r\n            ...inputsValue\r\n        }\r\n\r\n        closeModal();\r\n        handleSubmit(product);\r\n    }\r\n\r\n    const onCancelHandle = () => {\r\n        closeModal();\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setInputsValue({\r\n            ...itemDetails\r\n        });\r\n\r\n        setNameCount(itemDetails.name.length);\r\n        setItemCatId(itemDetails.categoryId);\r\n        setError(false);\r\n    }\r\n\r\n    const selectFile = (e) => {\r\n        setSelectedImage(e.target.files[0]);\r\n\r\n        setInputsValue({\r\n            ...inputsValue,\r\n            img: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    const showErrorMsg = (text) => {\r\n        setError(text);\r\n    }\r\n\r\n    const changeCategory = (value) => {\r\n        setItemCatId(value);\r\n        setInputsValue({ ...inputsValue, categoryId: value })\r\n    }\r\n\r\n    const categoriesDropdown = categories && categories.map((cat, index) => {\r\n        const activeCat = itemCatId === index ? true : false;\r\n\r\n        return (\r\n            <Dropdown.Item\r\n                onClick={() => changeCategory(index)}\r\n                key={cat.id}\r\n                active={activeCat}\r\n            >\r\n                {cat.name}\r\n            </Dropdown.Item>\r\n        )\r\n    })\r\n\r\n    const imgUrl = selectedImage.length === 0 ?\r\n        `${ImgUrlDefault.PRODUCTS}${inputsValue.img}` : URL.createObjectURL(selectedImage);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"editBtn\" onClick={onShow}>\r\n                <PencilSquare />\r\n            </div>\r\n\r\n            <Modal size=\"lg\" animation={true} show={modalVisible} onHide={onCancelHandle}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Редагувати товар</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                {error && <Alert className=\"m-2\" variant={'danger'}>\r\n                    {error}\r\n                </Alert>}\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridName\">\r\n                                <Form.Label>\r\n                                    <b>Назва<span\r\n                                        className={nameCount > 40 ? 'text-danger' : ''}>\r\n\r\n                                        {!nameCount ? ':' : (`(${nameCount}):`)}\r\n                                    </span>\r\n                                    </b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('name', e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the product name\"\r\n                                    value={inputsValue && inputsValue.name}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <div className=\"shop-item-details__image mt-2\">\r\n                                <img src={imgUrl} alt=\"item pictures\" />\r\n                            </div>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridImage\" className=\"mt-4\">\r\n                                <Form.Control\r\n                                    onChange={selectFile}\r\n                                    type=\"file\"\r\n                                    placeholder=\"Enter the image url\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Dropdown className=\"mt-4\">\r\n                                <Dropdown.Toggle>\r\n                                    {!categories || !categories[itemCatId] ? 'Виберіть категорію' : categories[itemCatId].name}\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    {categoriesDropdown}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Group controlId=\"formGridDesc\" className=\"mt-4\">\r\n                            <Form.Label> <b> Опис: </b> </Form.Label>\r\n\r\n                            <TextEditor onChangeInfo={updateState} fieldName={'description'} content={inputsValue.description} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} className=\"mt-4\" controlId=\"formGridCount\">\r\n                                <Form.Label> <b> Ціна </b></Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('price', e.target.value)}\r\n                                    value={inputsValue.price}\r\n                                    placeholder=\"Ціна\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <hr />\r\n\r\n                        <Button variant=\"secondary\" onClick={onCancelHandle}>\r\n                            Відмінити\r\n                        </Button>\r\n\r\n                        <Button className=\"m-2\" variant=\"primary\" type=\"button\" onClick={onHandleSubmit}>\r\n                            Зберегти\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminProductsEdit\r\n\r\n","import { useSelector } from 'react-redux';\r\nimport { UserRoles } from '../utils/consts';\r\n\r\nfunction useIsModerator() {\r\n    const { isAuth, role } = useSelector(({ user }) => user);\r\n    const isModerator = isAuth && role === UserRoles.MODERATOR;\r\n    return isModerator;\r\n}\r\n\r\nexport default useIsModerator\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AdminProductDelete } from '../../admin/admin-products';\r\nimport useIsAdmin from '../../../hooks/useIsAdmin';\r\nimport useIsModerator from '../../../hooks/useIsModerator';\r\nimport { ImgUrlDefault } from '../../../utils/consts';\r\n\r\nimport './list-item.scss';\r\n\r\nfunction ListItem({ id, name, img, price, onClickBuyBtn, countOfAdded }) {\r\n    const isAdmin = useIsAdmin();\r\n    const isModerator = useIsModerator();\r\n\r\n    const onAddItem = () => {\r\n        const obj = {\r\n            id,\r\n            name,\r\n            img,\r\n            price\r\n        };\r\n\r\n        onClickBuyBtn(obj);\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-item\">\r\n            {isAdmin || isModerator ? <AdminProductDelete name={name} id={id} /> : ''}\r\n            <div className=\"shop-item__img\">\r\n                <img src={`${ImgUrlDefault.PRODUCTS}${img}`} alt=\"poster\" />\r\n            </div>\r\n            <div className=\"list-item__title\">\r\n                <Link to={`/shop/${id}`}>{name}</Link>\r\n            </div>\r\n\r\n            <div className=\"list-item__bottom\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-lg-6 list-item__price\">\r\n                        {price} ₴\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-6 text-center\">\r\n                        <button onClick={onAddItem} className=\"btn-add-to-cart\">\r\n                            +Додати {countOfAdded && <span>{countOfAdded}</span>}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","import ListItem from './list-item';\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport Container from '../UI/container';\r\nimport Spinner from '../UI/spinner';\r\nimport ListItem from '../shop-items-list/list-item';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchPopularGoods, addItemToCart } from '../../redux/actions';\r\n\r\nimport './popular-products.scss';\r\n\r\nconst PopularProducts = ({ title, catId }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cartItems = useSelector(({ cart }) => cart.items);\r\n    const { isLoaded, popularItems } = useSelector(({ goods }) => goods);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchPopularGoods(catId));\r\n    }, [dispatch, catId]);\r\n\r\n    const handleAddItemToCart = (obj) => {\r\n        dispatch(addItemToCart(obj));\r\n    }\r\n\r\n    const items = popularItems && popularItems.map(({ id, ...item }) => {\r\n        const countOfAdded = cartItems[id] && cartItems[id].length;\r\n        return <ListItem\r\n            key={id}\r\n            onClickBuyBtn={handleAddItemToCart}\r\n            countOfAdded={countOfAdded}\r\n            id={id}\r\n            {...item}\r\n        />\r\n    })\r\n\r\n    if (!items || !items.length) {\r\n        return <Container title={title} isLoaded={isLoaded}>\r\n            <p className=\"empty-list-popular text-center\">Товари відсутні</p>\r\n        </Container>\r\n    }\r\n\r\n    return (\r\n        <Container title={title} isLoaded={isLoaded}>\r\n            <div className=\"popular-items-list\">\r\n                {!isLoaded ? <Spinner /> : items}\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PopularProducts;\r\n","import PopularProducts from './popular-products';\r\n\r\nexport default PopularProducts;","import React, { useEffect } from 'react';\r\nimport Container from '../UI/container';\r\nimport Spinner from '../UI/spinner';\r\nimport PopularProducts from '../popular-products';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchItemDetails, addItemToCart } from '../../redux/actions';\r\nimport { AdminProductsEdit } from '../admin/admin-products';\r\nimport useIsAdmin from '../../hooks/useIsAdmin';\r\nimport useIsModerator from '../../hooks/useIsModerator';\r\nimport parse from 'html-react-parser';\r\nimport { ImgUrlDefault } from '../../utils/consts';\r\n\r\nimport './shop-item-details.scss';\r\n\r\nfunction ShopItemDetails({ itemId }) {\r\n    const dispatch = useDispatch();\r\n    const { itemDetails, isLoaded } = useSelector(({ goods }) => goods);\r\n\r\n    const cartItems = useSelector(({ cart }) => cart.items);\r\n    const countOfAdded = cartItems[itemId] && cartItems[itemId].length;\r\n\r\n    const isAdmin = useIsAdmin();\r\n    const isModerator = useIsModerator();\r\n\r\n    const handleAddItemToCart = () => {\r\n        dispatch(addItemToCart(itemDetails));\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchItemDetails(itemId));\r\n    }, [itemId, dispatch])\r\n\r\n    if (!itemDetails || Object.keys(itemDetails).length === 0) {\r\n        return <Spinner />;\r\n    }\r\n\r\n    const editAccess = isAdmin || isModerator;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container title={itemDetails.name} backArrow>\r\n                {editAccess && itemDetails\r\n                    ? <AdminProductsEdit itemDetails={itemDetails} /> : ''}\r\n\r\n                {!isLoaded ? <Spinner /> :\r\n                    <div className=\"shop-item-details\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"shop-item-details__image\">\r\n                                    <img src={`${ImgUrlDefault.PRODUCTS}${itemDetails.img}`} alt=\"item pictures\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"shop-item-details__block shop-item-details__info\">\r\n                                    <p className=\"desc-title\">Опис:</p>\r\n                                    <span>\r\n                                        {parse(`${itemDetails.description}`)}\r\n                                    </span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shop-item-details__bottom\">\r\n                            <div className=\"shop-item-details__price\">\r\n                                Ціна: {itemDetails.price} ₴\r\n                            </div>\r\n                            <button onClick={handleAddItemToCart} className=\"btn-add-to-cart\">\r\n                                +Додати {countOfAdded && <span>{countOfAdded}</span>}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </Container>\r\n\r\n            <PopularProducts title={\"Популярне у даній категорії\"} catId={itemDetails.categoryId} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default ShopItemDetails\r\n","import ShopItemDetails from './shop-item-details';\r\n\r\nexport default ShopItemDetails;","import React from 'react';\r\nimport Container from '../UI/container';\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h3 className=\"text-center\"> Уууупс! Сторінку не знайдено :( </h3>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import Error404 from './error-404';\r\n\r\nexport default Error404;","import React from 'react'\r\nimport { PlusCircleFill } from 'react-bootstrap-icons';\r\nimport { createCategory } from '../../../services/productsAPI';\r\nimport { fetchCategories } from '../../../redux/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nimport './admin-categories.scss'\r\n\r\nfunction CreateCategories() {\r\n    const dispatch = useDispatch();\r\n    const [modalVisible, setModalVisible] = React.useState(false);\r\n    const [categoryValue, setCategoryValue] = React.useState('');\r\n\r\n    const onShow = () => {\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalVisible(false)\r\n    }\r\n\r\n    const saveNewCategory = () => {\r\n        createCategory({ name: categoryValue })\r\n            .then(data => {\r\n                setModalVisible(false);\r\n                dispatch(fetchCategories());\r\n                setCategoryValue('');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"addBtnCategories\" onClick={onShow}>\r\n            <PlusCircleFill />\r\n\r\n            <div onClick={e => e.stopPropagation()}>\r\n                <Modal\r\n                    show={modalVisible}\r\n                    onHide={closeModal}\r\n                    size=\"lg\"\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Добавити категорію\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Control\r\n                                value={categoryValue}\r\n                                placeholder={\"Введіть назву категорії\"}\r\n                                onChange={e => setCategoryValue(e.target.value)}\r\n                            />\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"outline-danger\" onClick={closeModal}>Закрити</Button>\r\n                        <Button variant=\"outline-success\" onClick={saveNewCategory}>Додати</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CreateCategories\r\n","import React from 'react';\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\nimport { TrashFill } from 'react-bootstrap-icons';\r\nimport { CheckLg } from 'react-bootstrap-icons';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport ModalBox from '../../UI/modal-box';\r\n\r\nimport './admin-categories.scss';\r\n\r\nfunction EditCategoriesListItem({ name, id, index, handleDelete, handleUpdate }) {\r\n\r\n    const [stateDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [stateEditInput, setEditInput] = React.useState(false);\r\n    const [categoryValue, setCategoryValue] = React.useState(name);\r\n\r\n    const onDelete = () => {\r\n        handleDelete(id, index)\r\n        setShowDeleteModal(false)\r\n    }\r\n\r\n    const onShowEdit = () => {\r\n        setEditInput(!stateEditInput);\r\n        setCategoryValue(name);\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setShowDeleteModal(false);\r\n    }\r\n\r\n    const onShowDelete = () => {\r\n        setShowDeleteModal(true);\r\n    }\r\n\r\n    const onUpdate = () => {\r\n        if (!categoryValue || !categoryValue.replace(/\\s/g, '').length) {\r\n            return\r\n        }\r\n\r\n        handleUpdate(id, categoryValue);\r\n        setEditInput(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ModalBox\r\n                show={stateDeleteModal}\r\n                handleNo={onCancelDelete}\r\n                handleYes={onDelete}\r\n                title={'Видалення'}\r\n                body={`Ви дійсно бажаєте видалити категорію \"${name}\"?`}\r\n            />\r\n\r\n            <li className=\"list-group-item text-center\" key={`${id}`}>\r\n\r\n                {stateEditInput ? <Form className=\"d-flex justify-content-center\">\r\n                    <Form.Control\r\n                        value={categoryValue}\r\n                        placeholder={\"Введіть назву категорії\"}\r\n                        onChange={e => setCategoryValue(e.target.value)}\r\n                        className=\"edit-input\"\r\n                    />\r\n                    <Button onClick={onUpdate} className=\"ml-4\"><CheckLg /></Button>\r\n                </Form> : <b>{name}</b>}\r\n\r\n                <div className=\"d-inline text-right d-block\">\r\n                    <Button\r\n                        onClick={onShowDelete}\r\n                        variant=\"outline-danger\"\r\n                        className=\"m-2\"\r\n                    >\r\n                        <TrashFill />\r\n                    </Button>\r\n\r\n                    <Button variant=\"outline-success\" onClick={onShowEdit} >\r\n                        <PencilSquare />\r\n                    </Button>\r\n                </div>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditCategoriesListItem\r\n","import { ListCheck } from 'react-bootstrap-icons';\r\nimport { Modal, Button, Alert } from 'react-bootstrap';\r\nimport { fetchCategories } from '../../../redux/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActiveCategory } from '../../../redux/actions';\r\nimport EditCategoriesListItem from './edit-categories-list-item';\r\nimport { updateCategory, getProductByCatId, deleteCategory } from '../../../services/productsAPI';\r\n\r\nimport React from 'react';\r\n\r\nimport './admin-categories.scss';\r\n\r\nfunction EditCategoriesList() {\r\n    const dispatch = useDispatch();\r\n    const { activeCategory, categories } = useSelector(({ filters }) => filters);\r\n    const [isError, setIsError] = React.useState(false)\r\n\r\n    const [modalVisible, setModalVisible] = React.useState(false);\r\n\r\n    const onShow = () => {\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalVisible(false)\r\n        setIsError(false);\r\n    }\r\n\r\n    const handleDelete = (id, index) => {\r\n        getProductByCatId(index).then(data => {\r\n            if (data) {\r\n                setIsError(true);\r\n                return;\r\n            }\r\n\r\n            if (activeCategory === index) {\r\n                dispatch(setActiveCategory(null));\r\n            }\r\n\r\n            deleteCategory(id).then(data => {\r\n                dispatch(fetchCategories());\r\n            })\r\n\r\n            isError && setIsError(false);\r\n        })\r\n    }\r\n\r\n    const handleUpdate = (id, name) => {\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n\r\n        updateCategory(formData, id).then(data => {\r\n            dispatch(fetchCategories());\r\n        })\r\n\r\n        isError && setIsError(false);\r\n    }\r\n\r\n    const categoriesList = categories && categories.map((elem, index) => {\r\n        return <EditCategoriesListItem\r\n            name={elem.name}\r\n            id={elem.id}\r\n            index={index}\r\n            handleDelete={handleDelete}\r\n            handleUpdate={handleUpdate}\r\n            key={elem.id} />\r\n    })\r\n\r\n    return (\r\n        <div className=\"admin-list-check\" onClick={onShow}>\r\n            <ListCheck />\r\n\r\n            <div onClick={e => e.stopPropagation()}>\r\n\r\n                <Modal\r\n                    show={modalVisible}\r\n                    onHide={closeModal}\r\n                    size=\"lg\"\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Список категорій\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        {isError && <Alert variant='danger'>\r\n                            Помилка! Ви не можете видалити категорію, у якій знаходяться товари\r\n                        </Alert>}\r\n\r\n                        <ul>\r\n                            {categoriesList &&\r\n                                categoriesList.length === 0 ?\r\n                                <p className=\"text-center text-muted\">Категорії відсутні</p> : categoriesList}\r\n                        </ul>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"outline-danger\" onClick={closeModal}>Закрити</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCategoriesList\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setActiveCategory, fetchCategories, setPage } from '../../redux/actions';\r\nimport { CreateCategories } from '../admin/admin-categories';\r\nimport { EditCategoriesList } from '../admin/admin-categories';\r\n\r\nimport './categories-list.scss';\r\nimport { UserRoles } from '../../utils/consts';\r\n\r\nfunction CategoriesList() {\r\n    const dispatch = useDispatch();\r\n    const { activeCategory, categories } = useSelector(({ filters }) => filters);\r\n    const { isAuth, role } = useSelector(({ user }) => user);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchCategories());\r\n    }, [dispatch])\r\n\r\n    const onSelectCategory = React.useCallback((index) => {\r\n        dispatch(setActiveCategory(index));\r\n        dispatch(setPage(1));\r\n    }, [dispatch]);\r\n\r\n    const categoriesList = categories && categories.map((elem, index) => {\r\n        return (\r\n            <li className={activeCategory === index ? 'shop-categories__active' : ''}\r\n                onClick={() => onSelectCategory(index)}\r\n                key={`${elem.id}`}>\r\n                {elem.name}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const isAdmin = role === UserRoles.ADMIN\r\n\r\n    return (\r\n        <div className=\"shop-categories\">\r\n            <ul>\r\n                {isAuth && isAdmin ? <li><EditCategoriesList /></li> : ''}\r\n\r\n                <li className={activeCategory === null ? 'shop-categories__active' : ''}\r\n                    onClick={() => onSelectCategory(null)}>\r\n                    Всі\r\n                </li>\r\n                {categoriesList}\r\n\r\n                {isAuth && isAdmin ? <li><CreateCategories /></li> : ''}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nCategoriesList.propTypes = {\r\n    activeCategory: PropTypes.number,\r\n    items: PropTypes.arrayOf(PropTypes.object),\r\n    onClickCategory: PropTypes.func\r\n}\r\n\r\nCategoriesList.defaultProps = {\r\n    activeCategory: null,\r\n    items: [], onClickCategory: () => { }\r\n};\r\n\r\nexport default React.memo(CategoriesList)\r\n","import CategoriesList from './categories-list';\r\n\r\nexport default CategoriesList;","import { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n    let length = end - start + 1;\r\n    return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n    totalCount,\r\n    pageSize,\r\n    siblingCount = 1,\r\n    currentPage\r\n}) => {\r\n    const paginationRange = useMemo(() => {\r\n        const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n        // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n        const totalPageNumbers = siblingCount + 5;\r\n\r\n        /*\r\n          If the number of pages is less than the page numbers we want to show in our\r\n          paginationComponent, we return the range [1..totalPageCount]\r\n        */\r\n        if (totalPageNumbers >= totalPageCount) {\r\n            return range(1, totalPageCount);\r\n        }\r\n\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(\r\n            currentPage + siblingCount,\r\n            totalPageCount\r\n        );\r\n\r\n        /*\r\n          We do not want to show dots if there is only one position left \r\n          after/before the left/right page count as that would lead to a change if our Pagination\r\n          component size which we do not want\r\n        */\r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n\r\n            return [...leftRange, DOTS, totalPageCount];\r\n        }\r\n\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(\r\n                totalPageCount - rightItemCount + 1,\r\n                totalPageCount\r\n            );\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        }\r\n\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        }\r\n    }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n    return paginationRange;\r\n};\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { usePagination, DOTS } from './usePagination';\r\nimport './pagination.scss';\r\n\r\nconst Pagination = props => {\r\n    const {\r\n        onPageChange,\r\n        totalCount,\r\n        siblingCount = 1,\r\n        currentPage,\r\n        pageSize,\r\n        className\r\n    } = props;\r\n\r\n    const paginationRange = usePagination({\r\n        currentPage,\r\n        totalCount,\r\n        siblingCount,\r\n        pageSize\r\n    });\r\n\r\n    if (currentPage === 0 || paginationRange.length < 2) {\r\n        return null;\r\n    }\r\n\r\n    const onNext = () => {\r\n        onPageChange(currentPage + 1);\r\n    };\r\n\r\n    const onPrevious = () => {\r\n        onPageChange(currentPage - 1);\r\n        console.log('first')\r\n    };\r\n\r\n    let lastPage = paginationRange[paginationRange.length - 1];\r\n    return (\r\n        <ul\r\n            className={classnames('pagination-container', { [className]: className })}\r\n        >\r\n            <li\r\n                className={classnames('pagination-item', {\r\n                    disabled: currentPage === 1\r\n                })}\r\n                onClick={onPrevious}\r\n            >\r\n                <div className=\"arrow left\" />\r\n            </li>\r\n            {paginationRange.map((pageNumber, index) => {\r\n                if (pageNumber === DOTS) {\r\n                    return <li key={index} className=\"pagination-item dots\">&#8230;</li>;\r\n                }\r\n\r\n                return (\r\n                    <li key={pageNumber + '' + index}\r\n                        className={classnames('pagination-item', {\r\n                            selected: pageNumber === currentPage\r\n                        })}\r\n                        onClick={() => onPageChange(pageNumber)}\r\n                    >\r\n                        {pageNumber}\r\n                    </li>\r\n                );\r\n            })}\r\n            <li\r\n                className={classnames('pagination-item', {\r\n                    disabled: currentPage === lastPage\r\n                })}\r\n                onClick={onNext}\r\n            >\r\n                <div className=\"arrow right\" />\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import Pagination from './pagination';\r\nexport default Pagination;","import React from 'react'\r\nimport ListItem from './list-item';\r\nimport Spinner from '../UI/spinner';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchGoods, addItemToCart, setPage } from '../../redux/actions';\r\nimport { AdminProductsAdd } from '../admin/admin-products';\r\nimport useIsAdmin from '../../hooks/useIsAdmin';\r\nimport useIsModerator from '../../hooks/useIsModerator';\r\nimport Pagination from '../UI/pagination';\r\n\r\nimport './shop-items-list.scss';\r\n\r\nfunction ShopItemsList() {\r\n    const dispatch = useDispatch();\r\n\r\n    const cartItems = useSelector(({ cart }) => cart.items);\r\n    const { items, isLoaded, totalCount, limit, page } = useSelector(({ goods }) => goods);\r\n    const { activeCategory, sortBy, sortOrder } = useSelector(({ filters }) => filters);\r\n\r\n    const isAdmin = useIsAdmin();\r\n    const isModerator = useIsModerator();\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchGoods(sortBy, activeCategory, sortOrder, page, limit));\r\n    }, [activeCategory, sortBy, sortOrder, page, limit, dispatch]);\r\n\r\n    const handleAddItemToCart = (obj) => {\r\n        dispatch(addItemToCart(obj));\r\n    }\r\n\r\n    const handleChangePage = (pageNumber) => {\r\n        dispatch(setPage(pageNumber));\r\n    }\r\n\r\n    const loadingGoods = !isLoaded ? <Spinner /> : items.map((item) => {\r\n        const countOfAdded = cartItems[item.id] && cartItems[item.id].length;\r\n        return <ListItem\r\n            onClickBuyBtn={handleAddItemToCart}\r\n            key={item.id}\r\n            countOfAdded={countOfAdded}\r\n            {...item}\r\n        />\r\n    })\r\n\r\n    const goodsList = loadingGoods.length !== 0\r\n        ? loadingGoods\r\n        : <h3 className=\"text-center text-secondary jumbotron jumbotron-fluid\">\r\n            Товари відсутні :(\r\n        </h3>;\r\n\r\n    return (\r\n        <div className=\"shop-items-list\">\r\n            {isAdmin || isModerator ? <AdminProductsAdd /> : ''}\r\n            {goodsList}\r\n\r\n            <Pagination\r\n                className=\"pagination-bar\"\r\n                currentPage={page}\r\n                totalCount={totalCount}\r\n                pageSize={limit}\r\n                onPageChange={page => handleChangePage(page)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShopItemsList;\r\n","import ShopItemsList from './shop-items-list';\r\n\r\nexport default ShopItemsList;","import React from 'react';\r\n\r\nimport './dropdown-arrow.scss';\r\n\r\nfunction DropdownArrow({ rotate }) {\r\n\r\n    const classNames = `arrow-svg ${rotate ? 'rotated' : ''}`;\r\n\r\n    return (\r\n        <svg\r\n            className={`arrow-svg ${classNames}`}\r\n            width=\"14\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 10 6\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                fill=\"#2C2C2C\"\r\n            />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default DropdownArrow\r\n","import DropdownArrow from './dropdown-arrow';\r\nexport default DropdownArrow;","import React from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSortOrder } from '../../../redux/actions';\r\nimport DropdownArrow from '../../UI/dropdown-arrow';\r\n\r\nfunction SortOrderArrow() {\r\n    const dispatch = useDispatch();\r\n\r\n    const { sortOrder } = useSelector(({ filters }) => filters);\r\n\r\n    const changeOrder = React.useCallback((type) => {\r\n        dispatch(setSortOrder(type));\r\n    }, [dispatch]);\r\n\r\n    const changeOrderType = (aa) => {\r\n        const order = sortOrder === 'desc' ? 'asc' : 'desc';\r\n        changeOrder(order);\r\n    }\r\n\r\n    const arrowRotates = sortOrder === 'desc' ? true : false;\r\n\r\n    return (\r\n        <div className=\"sort-arrow unselectable-text\" onClick={changeOrderType}>\r\n            <DropdownArrow rotate={arrowRotates} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SortOrderArrow;","import SortOrderArrow from './sort-order-arrow';\r\n\r\nexport default SortOrderArrow;","import React, { useState, useEffect, useRef } from 'react'\r\nimport SortOrderArrow from '../sort-order-arrow';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setSortBy } from '../../../redux/actions';\r\n\r\nimport './sort-popup.scss';\r\n\r\nconst items = [\r\n    { type: 'rating', name: 'популярністю' },\r\n    { type: 'price', name: 'ціною' },\r\n    { type: 'name', name: 'алфавітом' }\r\n];\r\n\r\nfunction SortPopup() {\r\n    const dispatch = useDispatch();\r\n\r\n    const { sortBy } = useSelector(({ filters }) => filters);\r\n\r\n    const [visiblePopup, setVisiblePopup] = useState(false);\r\n    const sortRef = useRef();\r\n    const activeLabel = items.find(item => item.type === sortBy).name;\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick)\r\n        return function cleanup() {\r\n            setVisiblePopup(false);\r\n        }\r\n    }, []);\r\n\r\n    const handleOutsideClick = (e) => {\r\n        const path = e.path || (e.composedPath && e.composedPath());\r\n        if (!path.includes(sortRef.current)) {\r\n            setVisiblePopup(false);\r\n        }\r\n    };\r\n\r\n    const onSelectItem = (type) => {\r\n        onChangeSortBy(type);\r\n        setVisiblePopup(false);\r\n    }\r\n\r\n    const onChangeSortBy = React.useCallback((type) => {\r\n        dispatch(setSortBy(type));\r\n    }, [dispatch]);\r\n\r\n    const togglePopup = () => {\r\n        setVisiblePopup(!visiblePopup);\r\n    };\r\n\r\n    const elements = items && items.map((elem, index) => {\r\n        return (\r\n            <li className={sortBy === elem.type ? 'active' : ''}\r\n                onClick={() => { onSelectItem(elem.type) }}\r\n                key={`${elem.type}_${index}`}>\r\n                {elem.name}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div ref={sortRef} className=\"sort\">\r\n            <div className=\"sort__label\">\r\n                <SortOrderArrow />\r\n                <b>Сортувати за:</b>\r\n                <span onClick={togglePopup}>{activeLabel}</span>\r\n            </div>\r\n\r\n\r\n            {visiblePopup &&\r\n                <div className=\"sort__popup\">\r\n                    <ul>\r\n                        {elements}\r\n                    </ul>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(SortPopup)\r\n","import SortPopup from './sort-popup';\r\n\r\nexport default SortPopup;","import React from 'react'\r\nimport CategoriesList from '../../components/categories-list';\r\nimport ShopItemsList from '../../components/shop-items-list';\r\nimport Container from '../../components/UI/container';\r\nimport SortPopup from '../../components/sort-filter/sort-popup';\r\n\r\nimport './shop-page.scss';\r\n\r\nfunction ShopPage() {\r\n    return (\r\n        <Container title=\"Магазин\">\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-12 col-lg-9\">\r\n                    <CategoriesList />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3\">\r\n                    <SortPopup />\r\n                </div>\r\n            </div>\r\n            <ShopItemsList />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShopPage;\r\n","import ShopPage from './shop-page';\r\n\r\nexport default ShopPage;","import React, { useState } from 'react';\r\nimport { Modal, Button, Col, Form, Alert } from 'react-bootstrap';\r\nimport { ImgUrlDefault } from '../../../utils/consts';\r\n\r\nfunction AdvantagesForm({ show, handleNo, handleSubmit, itemDetails }) {\r\n    const [error, setError] = useState(false);\r\n\r\n    const [titleCount, setTitleCount] = useState(\r\n        itemDetails ? itemDetails.title.length : 0\r\n    );\r\n\r\n    const [selectedImage, setSelectedImage] = useState('')\r\n\r\n    const [inputsValue, setInputsValue] = useState(\r\n        !itemDetails ? { title: '', img: '' } : { ...itemDetails }\r\n    );\r\n\r\n    const onChangeTitle = (e) => {\r\n        const title = e.target.value;\r\n\r\n        setTitleCount(title.length);\r\n\r\n        setInputsValue(prevState => {\r\n            return {\r\n                ...prevState,\r\n                title\r\n            }\r\n        });\r\n    }\r\n\r\n    const onHandleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (typeof inputsValue.img === 'object') {\r\n            const img = inputsValue.img;\r\n\r\n            const fileType = img.type.split('/')[0];\r\n\r\n            if (fileType !== 'image') {\r\n                showErrorMsg('Помилка! Заборонений тип файлу!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let key in inputsValue) {\r\n            if (inputsValue[key] === '') {\r\n                showErrorMsg('Помилка! Заповнено не всі поля');\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (titleCount > 80) {\r\n            showErrorMsg(`Помилка! Текст не повинен перевищувати 80 символів`);\r\n            return;\r\n        }\r\n\r\n        if (inputsValue.price > 2147483647) {\r\n            showErrorMsg(`Помилка! Невірно вказана ціна`);\r\n            return;\r\n        }\r\n\r\n        const product = {\r\n            ...inputsValue\r\n        }\r\n\r\n        onCancelHandle();\r\n        handleSubmit(product);\r\n    }\r\n\r\n    const onCancelHandle = () => {\r\n        handleNo();\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setInputsValue(!itemDetails ?\r\n            { title: '', img: '' } : { ...itemDetails });\r\n\r\n        setSelectedImage('');\r\n\r\n        setTitleCount(itemDetails ? itemDetails.title.length : 0);\r\n        setError(false);\r\n    }\r\n\r\n    const selectFile = (e) => {\r\n        setSelectedImage(e.target.files[0]);\r\n\r\n        setInputsValue(prevState => {\r\n            return {\r\n                ...prevState,\r\n                img: e.target.files[0]\r\n            }\r\n        });\r\n    }\r\n\r\n    const showErrorMsg = (text) => {\r\n        setError(text);\r\n    }\r\n\r\n    const imgUrl = selectedImage.length === 0 ?\r\n        `${ImgUrlDefault.ADVANTAGES}${inputsValue.img}` : URL.createObjectURL(selectedImage);\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" animation={true} show={show} onHide={onCancelHandle}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Редагування</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                {error && <Alert className=\"m-2\" variant={'danger'}>\r\n                    {error}\r\n                </Alert>}\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridName\">\r\n                                <Form.Label>\r\n                                    <b>Текст: <span\r\n                                        className={titleCount > 80 ? 'text-danger' : ''}>\r\n                                        ({titleCount})</span>\r\n                                    </b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    onChange={onChangeTitle}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the product name\"\r\n                                    value={inputsValue && inputsValue.title}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            {inputsValue.img &&\r\n                                <div className=\"shop-item-details__image mt-2 bg-secondary\">\r\n                                    <img src={imgUrl} alt=\"item pictures\" />\r\n                                </div>}\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridImage\" className=\"mt-4\">\r\n                                <Form.Control\r\n                                    onChange={selectFile}\r\n                                    type=\"file\"\r\n                                    placeholder=\"Enter the image url\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n\r\n                        <hr />\r\n\r\n                        <Button variant=\"secondary\" onClick={onCancelHandle}>\r\n                            Відмінити\r\n                        </Button>\r\n\r\n                        <Button className=\"m-2\" variant=\"primary\" type=\"button\" onClick={onHandleSubmit}>\r\n                            Зберегти\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdvantagesForm;\r\n\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchAdvantages } from '../redux/actions';\r\n\r\nfunction useAdminAdvantages(request) {\r\n    const dispatch = useDispatch();\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const onShowModalForm = () => {\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    const onCloseModalForm = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleSubmit = (advantage) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('title', advantage.title);\r\n            typeof advantage.img !== 'string' && formData.append('img', advantage.img);\r\n\r\n            const reqData = advantage.id ?\r\n                { id: advantage.id, item: formData } : formData\r\n\r\n            request(reqData).then(data => {\r\n                dispatch(fetchAdvantages());\r\n            })\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    return {\r\n        onShowModalForm,\r\n        onCloseModalForm,\r\n        handleSubmit,\r\n        isModalVisible\r\n    }\r\n}\r\n\r\nexport default useAdminAdvantages;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { PlusCircleFill } from 'react-bootstrap-icons';\r\nimport AdvantagesForm from './advantages-form';\r\nimport { createAdvantages } from '../../../services/productsAPI';\r\nimport useAdminAdvantages from '../../../hooks/useAdminAdvantages';\r\n\r\nimport './advantages-create.scss';\r\n\r\nfunction AdvantagesCreate() {\r\n\r\n    const { onShowModalForm,\r\n        onCloseModalForm,\r\n        handleSubmit,\r\n        isModalVisible } = useAdminAdvantages(createAdvantages);\r\n\r\n    return (\r\n        <div className=\"admin-advantages-create-btn\">\r\n            <Button variant=\"info\" onClick={onShowModalForm}>\r\n                <PlusCircleFill color=\"white\" />\r\n            </Button>\r\n\r\n            <AdvantagesForm\r\n                show={isModalVisible}\r\n                handleNo={onCloseModalForm}\r\n                handleSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvantagesCreate\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\nimport AdvantagesForm from './advantages-form';\r\nimport { updateAdvantages } from '../../../services/productsAPI';\r\nimport useAdminAdvantages from '../../../hooks/useAdminAdvantages';\r\n\r\nfunction AdvantagesEdit({ item }) {\r\n\r\n    const { onShowModalForm,\r\n        onCloseModalForm,\r\n        handleSubmit,\r\n        isModalVisible } = useAdminAdvantages(updateAdvantages);\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"m-1 btn-success\" onClick={onShowModalForm}>\r\n                <PencilSquare />\r\n            </Button>\r\n\r\n            <AdvantagesForm\r\n                show={isModalVisible}\r\n                handleNo={onCloseModalForm}\r\n                handleSubmit={handleSubmit}\r\n                itemDetails={item}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvantagesEdit\r\n","import React from 'react';\r\nimport { TrashFill } from 'react-bootstrap-icons';\r\nimport { Button } from 'react-bootstrap';\r\nimport ModalBox from '../../UI/modal-box';\r\nimport { deleteAdvantages } from '../../../services/productsAPI';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchAdvantages } from '../../../redux/actions';\r\n\r\nfunction AdvantagesDelete({ name, id }) {\r\n    const dispatch = useDispatch();\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const handleNo = () => setShow(false);\r\n\r\n    const handleYes = () => {\r\n        toggleShow();\r\n        deleteAdvantages(id).then(data => {\r\n            dispatch(fetchAdvantages());\r\n        })\r\n    };\r\n\r\n    const toggleShow = () => {\r\n        setShow(!show);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={toggleShow} className=\"m-1 btn-danger\">\r\n                <TrashFill />\r\n            </Button>\r\n\r\n            <ModalBox\r\n                show={show}\r\n                handleNo={handleNo}\r\n                handleYes={handleYes}\r\n                body={`Ви дійсно бажаєте видалити: \"${name}\" ?`}\r\n                title={`Видалення: \"${name}\"`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvantagesDelete\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { UserRoles } from '../../utils/consts';\r\nimport { AdvantagesEdit } from '../admin/admin-advantages';\r\nimport { AdvantagesDelete } from '../admin/admin-advantages';\r\nimport { ImgUrlDefault } from '../../utils/consts';\r\n\r\nfunction AdvantagesListItem({ elem }) {\r\n    const { isAuth, role } = useSelector(({ user }) => user);\r\n\r\n    const isAdmin = role === UserRoles.ADMIN && isAuth;\r\n\r\n    return (\r\n        <div key={elem.id} className=\"advantage\">\r\n            <div className=\"advantage__img\">\r\n                <img src={`${ImgUrlDefault.ADVANTAGES}${elem.img}`} alt=\"icon\" />\r\n            </div>\r\n            <div className=\"advantage__text\">{elem.title}</div>\r\n\r\n            {isAdmin &&\r\n                <div className=\"admin-advantage-edit\">\r\n                    <AdvantagesEdit item={elem} />\r\n                    <AdvantagesDelete name={elem.title} id={elem.id} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvantagesListItem\r\n","import React from 'react';\r\nimport { fetchAdvantages } from '../../redux/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AdvantagesListItem from './advantages-list-item';\r\nimport { AdvantagesCreate } from '../admin/admin-advantages';\r\nimport { UserRoles } from '../../utils/consts';\r\n\r\nimport Container from '../UI/container';\r\n\r\nimport './advantages-list.scss';\r\n\r\nfunction AdvantagesList() {\r\n    const dispatch = useDispatch();\r\n    const { isAuth, role } = useSelector(({ user }) => user);\r\n\r\n    const { advantagesList, isLoaded } = useSelector(({ advantages }) => {\r\n        return {\r\n            advantagesList: advantages.items,\r\n            isLoaded: advantages.isLoaded\r\n        }\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchAdvantages());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Container title=\"Чому обирають нашу воду?\" isLoaded={isLoaded}>\r\n            {isAuth && role === UserRoles.ADMIN && <AdvantagesCreate />}\r\n\r\n            <div className=\"advantages-wrapper\">\r\n                {\r\n                    advantagesList && advantagesList.map((elem) => {\r\n                        return <AdvantagesListItem key={elem.id} elem={elem} />\r\n                    })\r\n                }\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdvantagesList;\r\n\r\n","import AdvantagesList from './advantages-list';\r\n\r\nexport default AdvantagesList;","import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nimport Container from '../../UI/container';\r\n\r\nimport './map.scss';\r\n\r\nmapboxgl.workerClass = MapboxWorker;\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiZGlrdXNvciIsImEiOiJja25leWhsYWYxdzY2MnBtcjNkdDRhYWU4In0.pdghOzMOAjtXK2FrRLFRcA';\r\n\r\nconst Map = () => {\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(24.0099813);\r\n    const [lat, setLat] = useState(49.8439957);\r\n    const [zoom, setZoom] = useState(16.5);\r\n\r\n    useEffect(() => {\r\n        if (map.current) return; // initialize map only once\r\n        map.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/dikusor/ckngbl5xc1bka17p3fql8z4wn',\r\n            center: [lng, lat],\r\n            zoom: zoom\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!map.current) return; // wait for map to initialize\r\n        map.current.on('move', () => {\r\n            setLng(map.current.getCenter().lng.toFixed(4));\r\n            setLat(map.current.getCenter().lat.toFixed(4));\r\n            setZoom(map.current.getZoom().toFixed(2));\r\n        });\r\n    });\r\n\r\n    return (\r\n        <Container >\r\n            <div>\r\n                <div className=\"map-container\" ref={mapContainer} />\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Map;","import Map from './map';\r\n\r\nexport default Map;","import React from 'react'\r\nimport { getComponentInfoByName } from '../services/productsAPI'\r\n\r\nfunction usePage(page) {\r\n    const [componentData, setComponentData] = React.useState({})\r\n    const [isLoading, setIsLoading] = React.useState(false)\r\n\r\n    const updateInfo = React.useCallback(() => {\r\n        getComponentInfoByName(page).then(data => {\r\n            setComponentData(...data)\r\n        }).finally(() => {\r\n            setIsLoading(true);\r\n        })\r\n    }, [page])\r\n\r\n    React.useEffect(() => {\r\n        updateInfo();\r\n    }, [updateInfo])\r\n\r\n    return {\r\n        data: componentData,\r\n        isLoading,\r\n        update: updateInfo\r\n    }\r\n}\r\n\r\nexport default usePage;\r\n","import HomePage from './home-page';\r\n\r\nexport default HomePage;","import React from 'react'\r\nimport Container from '../../components/UI/container';\r\nimport PopularProducts from '../../components/popular-products';\r\nimport AdvantagesList from '../../components/advantages-list';\r\nimport Map from '../../components/Layout/map';\r\nimport { AdminComponentsEdit } from '../../components/admin/admin-components';\r\nimport usePage from '../../hooks/usePage';\r\nimport useIsAdmin from '../../hooks/useIsAdmin';\r\nimport parse from 'html-react-parser';\r\n\r\nimport './home-page.scss';\r\nimport { ComponentName, ImgUrlDefault } from '../../utils/consts';\r\n\r\nexport default function HomePage() {\r\n    const isAdmin = useIsAdmin();\r\n\r\n    const { data, isLoading, update } = usePage(ComponentName.HOME);\r\n\r\n    return (\r\n        <div>\r\n            <Container isLoaded={isLoading}>\r\n                {isAdmin && <AdminComponentsEdit data={data} updateData={update} />}\r\n\r\n                <div className=\"home\">\r\n                    <div className=\"home__img\">\r\n                        {data.img &&\r\n                            <img src={`${ImgUrlDefault.COMPONENTS}${data.img}`} className=\"img-fluid\" alt=\"main logo\" />\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"home__text\">\r\n                        {data ? parse(`${data.text}`) : ''}\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n            <AdvantagesList />\r\n            <PopularProducts title={\"Популярні товари\"} />\r\n            <Map />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Container from '../../components/UI/container';\r\nimport { AdminComponentsEdit } from '../../components/admin/admin-components';\r\nimport usePage from '../../hooks/usePage';\r\nimport parse from 'html-react-parser';\r\nimport { ImgUrlDefault } from '../../utils/consts';\r\n\r\nimport './about-us-page.scss';\r\nimport { ComponentName } from '../../utils/consts';\r\n\r\nconst AboutUsPage = () => {\r\n    const { isAuth, role } = useSelector(({ user }) => user);\r\n    const { data, isLoading, update } = usePage(ComponentName.ABOUT_US);\r\n\r\n    const image = data.img && <img className=\"aboutus__preloader-img\" src={`${ImgUrlDefault.COMPONENTS}${data.img}`} alt=\"poster\" />\r\n\r\n    return (\r\n        <Container title={data.title} isLoaded={isLoading}>\r\n            {isAuth && role === 'ADMIN' ? <AdminComponentsEdit data={data} updateData={update} /> : ''}\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 text-center\">{image}</div>\r\n                <div className=\"col-md-6 about-us-text\">\r\n                    <div>\r\n                        {data.text ? parse(`${data.text}`) : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default AboutUsPage;\r\n","import AboutUsPage from './about-us-page';\r\n\r\nexport default AboutUsPage;","import ContactsPage from './contacts-page';\r\n\r\nexport default ContactsPage;","import React from 'react'\r\nimport Container from '../../components/UI/container';\r\nimport Map from '../../components/Layout/map';\r\nimport { useSelector } from 'react-redux';\r\nimport { AdminComponentsEdit } from '../../components/admin/admin-components';\r\nimport parse from 'html-react-parser';\r\nimport { ComponentName } from '../../utils/consts';\r\nimport usePage from '../../hooks/usePage';\r\nimport { ImgUrlDefault } from '../../utils/consts';\r\n\r\nimport './contacts-page.scss';\r\n\r\nexport default function ContactsPage() {\r\n    const { isAuth, role } = useSelector(({ user }) => user);\r\n\r\n    const { data, isLoading, update } = usePage(ComponentName.CONTACTS)\r\n\r\n    return (\r\n        <div className=\"contacts\">\r\n            <Container title={data.title} isLoaded={isLoading}>\r\n                {isAuth && role === 'ADMIN' ? <AdminComponentsEdit data={data} updateData={update} /> : ''}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"contacts-text\">\r\n                            {data ? parse(`${data.text}`) : ''}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"page-img\">\r\n                            {data.img && <img src={`${ImgUrlDefault.COMPONENTS}${data.img}`} alt=\"poster\" />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n\r\n            <Map />\r\n        </div>\r\n    )\r\n}\r\n","import PaymentDeliveryPage from './payment-delivery-page';\r\n\r\nexport default PaymentDeliveryPage;","import React from 'react'\r\nimport Container from '../../components/UI/container';\r\nimport { AdminComponentsEdit } from '../../components/admin/admin-components';\r\nimport usePage from '../../hooks/usePage';\r\nimport parse from 'html-react-parser';\r\nimport { ImgUrlDefault } from '../../utils/consts';\r\nimport './payment-delivery-page.scss';\r\nimport { ComponentName } from '../../utils/consts';\r\nimport useIsAdmin from '../../hooks/useIsAdmin';\r\n\r\nexport default function ContactsPage() {\r\n    const isAdmin = useIsAdmin();\r\n\r\n    const { data, isLoading, update } = usePage(ComponentName.PAYMENT);\r\n\r\n    return (\r\n        <Container title={data.title} isLoaded={isLoading}>\r\n            {isAdmin && <AdminComponentsEdit data={data} updateData={update} />}\r\n\r\n            {data ? parse(`${data.text}`) : ''}\r\n\r\n            <div className=\"page-img\">\r\n                {data.img && <img src={`${ImgUrlDefault.COMPONENTS}${data.img}`} alt=\"poster\" />}\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './cart-item.scss';\r\nimport ModalBox from '../UI/modal-box';\r\nimport { ImgUrlDefault } from '../../utils/consts';\r\n\r\nconst CartItem = (props) => {\r\n    const { item, count, totalPrice, onDeleteItem, onPlus, onMinus } = props;\r\n    const { id, img, name } = item;\r\n\r\n    const [showPopup, setShowPopup] = React.useState(false);\r\n\r\n    const onClosePopupHandler = () => {\r\n        setShowPopup(!showPopup);\r\n    }\r\n\r\n    const handlePlusClick = () => {\r\n        onPlus(item)\r\n    }\r\n\r\n    const handleMinusClick = () => {\r\n        onMinus(id)\r\n    }\r\n\r\n    const onClickYesPopupHandler = () => {\r\n        onDeleteItem(id)\r\n        setShowPopup(!showPopup);\r\n    }\r\n\r\n    return (\r\n        <li className=\"cart-item \">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 d-flex align-items-center\">\r\n                    <div className=\"cart-item__img\">\r\n                        <img src={`${ImgUrlDefault.PRODUCTS}${img}`} alt=\"item\" />\r\n                    </div>\r\n                    <div className=\"cart-item__info\">\r\n                        <Link to={`/shop/${id}`}><h3>{name}</h3></Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 d-flex bottom-item-mobile align-items-center\">\r\n                    <div className=\"cart-item__count\">\r\n                        <div onClick={handleMinusClick} className=\"cart-item__btn unselectable-text\">-</div>\r\n                        <span>{count}</span>\r\n                        <div onClick={handlePlusClick} className=\"cart-item__btn unselectable-text\">+</div>\r\n                    </div>\r\n                    <div className=\"cart-item__price\">{totalPrice} ₴</div>\r\n                    <div className=\"cart-item__del\">\r\n                        <div className=\"cart-item__btn btn_del unselectable-text\" onClick={onClosePopupHandler}>x</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <ModalBox\r\n                show={showPopup}\r\n                handleNo={onClosePopupHandler}\r\n                handleYes={onClickYesPopupHandler}\r\n                title={`Видалення: \"${name}\"`}\r\n                body={`Ви дійсно бажаєте видалити з кошика \"${name}\"?`}\r\n            />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n","import CartItem from './cart-item';\r\n\r\nexport default CartItem;","import jwt_decode from \"jwt-decode\";\r\nimport { $authHost, $host } from './http';\r\nimport { UserRoles } from '../utils/consts';\r\n\r\nexport const registration = async (email, password, name, phone = null) => {\r\n    console.log(phone)\r\n    const { data } = await $host.post('api/user/registration', { email, password, name, phone, role: UserRoles.USER })\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const { data } = await $host.post('api/user/login', { email, password })\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const changePassword = async (password, newPassword, id) => {\r\n    const { data } = await $host.post('api/user/changePassword', { password, newPassword, id })\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const check = async () => {\r\n    const { data } = await $authHost.get('api/user/auth')\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const changeRole = async (id, userRole) => {\r\n    const role = { role: userRole }\r\n    const { data } = await $host.patch('api/user/' + id, role)\r\n    return data;\r\n}\r\n\r\nexport const updateUser = async (user, id) => {\r\n    const { data } = await $authHost.patch('api/user/updateUser/' + id, user)\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    const { data } = await $authHost.delete('api/user/' + id)\r\n    return data\r\n}\r\n\r\nexport const forgotPassword = async (email) => {\r\n    const { data } = await $authHost.post('api/user/forgotPassword', { email })\r\n    return data\r\n}\r\n\r\nexport const resetPassword = async (id, token, password) => {\r\n    const { data } = await $authHost.post('api/user/resetPassword/' + id + '/' + token, { password });\r\n    return data\r\n}\r\n\r\n","export const isEmpty = value => value.trim() === '';\r\nexport const isFiveChars = value => value.trim().length >= 5;\r\nexport const isEmail = value => value.trim().length === 0 || !value.trim().includes('@');","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsAuth, setUser, clearCart } from '../../redux/actions';\r\nimport { Modal, Form, Button, Col, Alert } from 'react-bootstrap';\r\nimport { sendEmail } from '../../services/sendMail';\r\nimport { registration } from '../../services/userAPI';\r\nimport { isEmpty, isFiveChars, isEmail } from '../../helpers/isValidInput';\r\nimport ModalBox from '../UI/modal-box';\r\nimport { serialize } from 'object-to-formdata';\r\n\r\nimport './order-form.scss';\r\n\r\nfunction OrderForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [checkboxChecked, setCheckboxChecked] = useState(false);\r\n    const [userExists, setUserExists] = useState(false);\r\n    const [showPopup, setShowPopup] = React.useState(false);\r\n    const [showSuccessMsg, setShowSuccessMsg] = React.useState(false);\r\n\r\n    const { items } = useSelector(({ cart }) => cart);\r\n    const { id, isAuth, name, email, phone } = useSelector(({ user }) => user);\r\n\r\n    const [nameValue, setNameValue] = useState('');\r\n    const [phoneValue, setPhoneValue] = useState('');\r\n    const [passwordValue, setPasswordValue] = useState('');\r\n    const [emailValue, setEmailValue] = useState('');\r\n\r\n    const [errors, setErrors] = React.useState({\r\n        name: true,\r\n        phone: true,\r\n        email: true,\r\n        password: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        setNameValue(name)\r\n        setPhoneValue(phone);\r\n        setEmailValue(email)\r\n    }, [name, phone, email])\r\n\r\n    const handleNo = () => {\r\n        setShowPopup(false);\r\n        setErrors({\r\n            name: true,\r\n            phone: true,\r\n            email: true,\r\n            password: true\r\n        });\r\n        setCheckboxChecked(false);\r\n    }\r\n\r\n    const formShowHandler = () => { setShowPopup(true) }\r\n\r\n    const handleSubmit = async (e) => {\r\n        const enteredData = {\r\n            name: nameValue,\r\n            phone: phoneValue,\r\n            email: emailValue,\r\n            password: checkboxChecked ? passwordValue : ''\r\n        }\r\n\r\n        const enteredDataIsValid = {\r\n            name: !isEmpty(enteredData.name),\r\n            phone: !isEmpty(enteredData.phone),\r\n            email: !isEmail(enteredData.email),\r\n            password: checkboxChecked ? isFiveChars(enteredData.password) : true\r\n        }\r\n\r\n        setErrors({ ...enteredDataIsValid })\r\n\r\n        let formIsValid = !Object.values(enteredDataIsValid).includes(false);\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        sendOrderToEmail().then(data => {\r\n            if (data === false) {\r\n                setUserExists(true);\r\n                return;\r\n            }\r\n\r\n            handleNo();\r\n            setShowSuccessMsg(true);\r\n        });\r\n    }\r\n\r\n    const sendOrderToEmail = async () => {\r\n        let userId = id;\r\n\r\n        const userData = {\r\n            name: nameValue,\r\n            email: emailValue,\r\n            password: passwordValue,\r\n            phone: phoneValue\r\n        }\r\n\r\n        if (checkboxChecked) {\r\n            try {\r\n                await registration(userData.email, userData.password, userData.name, userData.phone).then(data => {\r\n                    dispatch(setUser(data))\r\n                    dispatch(setIsAuth(true))\r\n                    userId = data.id\r\n                });\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        try {\r\n            const itemOrders = {};\r\n\r\n            for (let key in items) {\r\n                itemOrders[key] = { ...items[key][0] };\r\n                itemOrders[key].count = items[key].length;\r\n                itemOrders[key].userId = userId;\r\n                itemOrders[key].userName = nameValue;\r\n                itemOrders[key].userEmail = emailValue;\r\n                itemOrders[key].userPhone = phoneValue;\r\n            }\r\n\r\n            const formData = serialize(\r\n                itemOrders\r\n            );\r\n\r\n            sendEmail(formData);\r\n\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    const nameChangeHandler = (e) => {\r\n        setErrors(prevState => ({ ...prevState, name: true }));\r\n        setNameValue(e.target.value);\r\n    }\r\n\r\n    const phoneChangeHandler = (e) => {\r\n        setErrors(prevState => ({ ...prevState, phone: true }));\r\n        setPhoneValue(e.target.value);\r\n    }\r\n\r\n    const emailChangeHandler = (e) => {\r\n        setErrors(prevState => ({ ...prevState, email: true }));\r\n        setUserExists(false);\r\n        setEmailValue(e.target.value);\r\n    }\r\n\r\n    const passwordChangeHandler = (e) => {\r\n        setErrors(prevState => ({ ...prevState, password: true }));\r\n        setPasswordValue(e.target.value);\r\n    }\r\n\r\n    const checkboxChangeHandler = (e) => {\r\n        setCheckboxChecked(e.target.checked);\r\n    }\r\n\r\n    const handleMsgClose = () => {\r\n        setShowSuccessMsg(false)\r\n        dispatch(clearCart());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cart-bottom__buy-btn unselectable-text\" onClick={formShowHandler}>Замовити</div>\r\n\r\n            {showSuccessMsg && <ModalBox\r\n                show={showSuccessMsg}\r\n                handleYes={handleMsgClose}\r\n                title={`Замовлення успішно відправлено!`}\r\n                body={`Дякуємо за ваше замовлення. Очікуйте телефонного дзвінка для уточнення деталей.`}\r\n            />}\r\n\r\n            <div onClick={e => e.stopPropagation()}>\r\n                <Modal size=\"lg\" animation={true} show={showPopup} onHide={handleNo}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title> Оформлення замовлення </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    {userExists && <Alert variant=\"danger\" className=\"m-2\">\r\n                        Користувач з даною поштовою скринькою вже існує\r\n                    </Alert>}\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"name\">\r\n                                    <Form.Label>\r\n                                        Прізвище та ім'я\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={nameValue}\r\n                                        onChange={nameChangeHandler}\r\n                                        placeholder=\"Введіть, будь ласка, ваше прізвище та ім'я\"\r\n                                    />\r\n                                </Form.Group>\r\n                                {!errors.name && <Alert className=\"error-msg\" variant='danger'>Помилка! Ви не ввели ваше ім'я</Alert>}\r\n                            </Form.Row>\r\n\r\n                            <br />\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"phone\">\r\n                                    <Form.Label>\r\n                                        Номер телефону\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        onChange={phoneChangeHandler}\r\n                                        value={phoneValue ? phoneValue : ''}\r\n                                        placeholder=\"Введіть, будь ласка, ваш мобільний номер\"\r\n                                    />\r\n                                    {!errors.phone && <Alert className=\"error-msg\" variant='danger'>Помилка! Ви не ввели номер телефону</Alert>}\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <br />\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"email\">\r\n                                    <Form.Label>\r\n                                        Електронна скринька\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        onChange={emailChangeHandler}\r\n                                        value={emailValue}\r\n                                        placeholder=\"Введіть, будь ласка, ваш email\"\r\n                                    />\r\n                                    {!errors.email && <Alert className=\"error-msg\" variant='danger'>Помилка! Поштова скринька не корректна</Alert>}\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <br />\r\n\r\n                            {!isAuth && <Form.Check\r\n                                type={'checkbox'}\r\n                                id={`default-checkbox`}\r\n                                label={`Зареєструватися`}\r\n                                onChange={checkboxChangeHandler}\r\n                            />}\r\n\r\n                            {checkboxChecked &&\r\n                                <div className=\"registration-section\">\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} controlId=\"password\">\r\n                                            <Form.Label>\r\n                                                Пароль\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"password\"\r\n                                                onChange={passwordChangeHandler}\r\n                                                value={passwordValue}\r\n                                                placeholder=\"Придумайте пароль\"\r\n                                            />\r\n                                            {!errors.password &&\r\n                                                <Alert className=\"error-msg\" variant='danger'>\r\n                                                    Пароль повинен налічувати не менше 5 символів\r\n                                                </Alert>}\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                </div>\r\n                            }\r\n\r\n                            <hr />\r\n\r\n                            <Button variant=\"secondary\" onClick={handleNo}>\r\n                                Відмінити\r\n                            </Button>\r\n\r\n                            <Button className=\"m-2\" variant=\"primary\" id=\"btn\" type=\"button\" onClick={handleSubmit}>\r\n                                Купити\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderForm\r\n","import OrderForm from './order-form';\r\nexport default OrderForm;","import { $host } from './http';\r\n\r\nexport const sendEmail = async (mailData) => {\r\n    const { data } = await $host.post('api/order/', mailData)\r\n    return data\r\n}","export default __webpack_public_path__ + \"static/media/trash-icon.49eafd40.png\";","export default __webpack_public_path__ + \"static/media/cart-is-empty.6f0349a5.png\";","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Container from '../../components/UI/container';\r\nimport CartItem from '../../components/cart-item';\r\nimport OrderForm from '../../components/order-form';\r\nimport ModalBox from '../../components/UI/modal-box';\r\nimport trashIcon from '../../assets/images/trash-icon.png';\r\nimport emptyCartImg from '../../assets/images/cart-is-empty.png';\r\n\r\nimport { clearCart, removeCartItem, minusCartItem, addItemToCart } from \"../../redux/actions\"\r\n\r\nimport './cart-page.scss';\r\n\r\nexport default function CartPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const { totalPrice,\r\n        totalCount,\r\n        items,\r\n        itemTotalCount,\r\n        itemTotalPrice\r\n    } = useSelector(({ cart }) => cart);\r\n\r\n    const [showPopup, setShowPopup] = React.useState(false)\r\n\r\n    const onToggleClearCartPopup = () => {\r\n        setShowPopup(prevState => !prevState);\r\n    }\r\n\r\n    const delItemFromCart = (id) => {\r\n        dispatch(removeCartItem(id));\r\n    }\r\n\r\n    const plusItemCart = (item) => {\r\n        dispatch(addItemToCart(item));\r\n    }\r\n\r\n    const minusItemCart = (id) => {\r\n        itemTotalCount[id] > 1 && dispatch(minusCartItem(id));\r\n    }\r\n\r\n    const handleClickedYes = () => {\r\n        dispatch(clearCart());\r\n        setShowPopup(!showPopup);\r\n    }\r\n\r\n    const cartItems = Object.keys(items).map(key => {\r\n        return items[key][0];\r\n    });\r\n\r\n    const cartItemsList = cartItems.map((elem) => {\r\n        const id = elem.id;\r\n        return <CartItem\r\n            key={id}\r\n            item={elem}\r\n            count={itemTotalCount[id]}\r\n            totalPrice={itemTotalPrice[id]}\r\n            onDeleteItem={delItemFromCart}\r\n            onMinus={minusItemCart}\r\n            onPlus={plusItemCart}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <Container title=\"Кошик\" backArrow>\r\n            {totalCount ?\r\n                <CartView\r\n                    items={cartItemsList}\r\n                    onToggleClearCartPopup={onToggleClearCartPopup}\r\n                    onClickYes={handleClickedYes}\r\n                    totalCount={totalCount}\r\n                    totalPrice={totalPrice}\r\n                    showPopup={showPopup}\r\n                />\r\n                :\r\n                <h3 className=\"text-center text-secondary jumbotron jumbotron-fluid\">\r\n                    <img className=\"empty-cart-img\" src={emptyCartImg} alt=\"cart is empty\" />\r\n                    <p>Ваш кошик порожній :( </p>\r\n                </h3>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst CartView = (props) => {\r\n    const { items,\r\n        showPopup,\r\n        onToggleClearCartPopup,\r\n        onClickYes,\r\n        totalCount,\r\n        totalPrice\r\n    } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ModalBox\r\n                handleNo={onToggleClearCartPopup}\r\n                handleYes={onClickYes}\r\n                show={showPopup}\r\n                title={'Кошик'}\r\n                body={'Ви дійсно бажаєте очистити кошик?'}\r\n            />\r\n\r\n            <div className=\"cart-top\">\r\n                <div onClick={onToggleClearCartPopup} className=\"cart-top__clear-btn unselectable-text\">\r\n                    <img src={trashIcon} alt=\"trash-icon\" />\r\n                    Очистити кошик\r\n                </div>\r\n            </div>\r\n\r\n            <ul>{items}</ul>\r\n\r\n            <div className=\"cart-bottom\">\r\n                <div className=\"cart-bottom__info\">\r\n                    <div className=\"cart-bottom__items-counts\">Всього товарів: <span>{totalCount} шт.</span></div>\r\n                    <div className=\"cart-bottom__total-price\">Сума замовлення: <span>{totalPrice} ₴</span></div>\r\n                </div>\r\n\r\n                <OrderForm />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import CartPage from './cart-page';\r\n\r\nexport default CartPage;","import React, { useState } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { forgotPassword } from '../../services/userAPI';\r\nimport ModalBox from '../UI/modal-box';\r\n\r\nimport './restore-password.scss';\r\n\r\nfunction RestorePassword() {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [errorIsNotExist, setIsNotExist] = useState(false);\r\n    const [showMsgSuccess, setShowMsgSuccess] = useState(false);\r\n\r\n    const onShowRestorePasswordModal = (e) => {\r\n        setShowModal(prevState => !prevState);\r\n        setShowMsgSuccess(false);\r\n    }\r\n\r\n    const onSaveRestorePassword = async () => {\r\n        const data = await forgotPassword(email);\r\n\r\n        if (!data) {\r\n            setIsNotExist(true);\r\n            return;\r\n        }\r\n        setEmail('');\r\n        setShowMsgSuccess(true);\r\n        setIsNotExist(false);\r\n    }\r\n\r\n    const onChangeEmailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        setIsNotExist(false);\r\n    }\r\n\r\n    const resetPasswordInput = <div className=\"form-outline mb-4\">\r\n        {errorIsNotExist && <Alert variant={'danger'}> Користувач з такою поштою не зареєстрований </Alert>}\r\n        <label className=\"form-label reset-form-label\" htmlFor=\"email\">Введіть вашу пошту:</label>\r\n        <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            onChange={onChangeEmailHandler}\r\n        />\r\n    </div>\r\n\r\n    const successMessage = <Alert variant={\"success\"}>\r\n        На вказану пошту відправлено лист з інструкцією для відновлення паролю\r\n    </Alert>\r\n\r\n    return <>\r\n        <div onClick={onShowRestorePasswordModal}\r\n            className=\"restore-password\"\r\n            href=\"#\">Забули пароль?\r\n        </div>\r\n\r\n        <ModalBox\r\n            body={!showMsgSuccess ? resetPasswordInput : successMessage}\r\n            title=\"Відновлення паролю\"\r\n            show={showModal}\r\n            handleNo={onShowRestorePasswordModal}\r\n            handleYes={!showMsgSuccess ? onSaveRestorePassword : onShowRestorePasswordModal}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default RestorePassword;\r\n","import RestorePassword from './restore-password';\r\nexport default RestorePassword;","import React from 'react';\r\nimport Container from '../../components/UI/container';\r\nimport { setIsAuth, setUser } from '../../redux/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login, registration } from '../../services/userAPI';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Routes } from '../../utils/consts';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { isFiveChars } from '../../helpers/isValidInput';\r\nimport RestorePassword from '../../components/restore-password';\r\n\r\nimport './auth-page.scss';\r\n\r\nfunction LoginPage() {\r\n    const dispatch = useDispatch();\r\n    const { isAuth } = useSelector(({ user }) => user);\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [userName, setUserName] = React.useState('');\r\n    const [error, setError] = React.useState('');\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const isLogin = location.pathname === Routes.LOGIN_ROUTE;\r\n\r\n    React.useEffect(() => {\r\n        setError('')\r\n    }, [location])\r\n\r\n    const auth = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!email.includes('@') || email.trim().length === 0) {\r\n            setError('Email is not correct');\r\n            return\r\n        }\r\n\r\n        if (!isLogin && userName.trim().length === 0) {\r\n            setError('Name is not correct');\r\n            return;\r\n        }\r\n\r\n        if (!isLogin && !isFiveChars(password)) {\r\n            setError('Пароль не повинен бути коротшим 5 символів');\r\n            return;\r\n        }\r\n\r\n        if (password.trim().length === 0) {\r\n            setError('Password is not correct');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n            } else {\r\n                data = await registration(email, password, userName);\r\n            }\r\n            dispatch(setIsAuth(true))\r\n            dispatch(setUser(data))\r\n            history.push('/')\r\n        } catch (e) {\r\n            setError(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    if (isAuth) {\r\n        return (\r\n            <Container>\r\n                <div className=\"text-center\">Ви вже залогінені!</div>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    const onChangeEmailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePasswordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeNameHandler = (e) => {\r\n        setUserName(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <form className=\"login-form\" onSubmit={auth}>\r\n\r\n                {error.length > 0 && <Alert variant='danger'>\r\n                    {error}\r\n                </Alert>}\r\n\r\n                <h2> {isLogin ? 'Увійти' : 'Реєстрація'} </h2>\r\n\r\n                <div className=\"form-outline mb-4\">\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        className=\"form-control\"\r\n                        value={email}\r\n                        onChange={onChangeEmailHandler}\r\n                    />\r\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\r\n                </div>\r\n\r\n                {!isLogin && <div className=\"form-outline mb-4\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"userName\"\r\n                        className=\"form-control\"\r\n                        value={userName}\r\n                        onChange={onChangeNameHandler}\r\n                    />\r\n                    <label className=\"form-label\" htmlFor=\"userName\">Прізвище та ім'я</label>\r\n                </div>}\r\n\r\n                <div className=\"form-outline mb-4\">\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        className=\"form-control\"\r\n                        value={password}\r\n                        onChange={onChangePasswordHandler}\r\n                    />\r\n                    <label className=\"form-label\" htmlFor=\"password\">Пароль</label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">{isLogin ? 'Увійти' : 'Зареєструватися'}</button>\r\n            </form>\r\n\r\n            <RestorePassword />\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import AuthPage from './auth-page';\r\n\r\nexport default AuthPage;","import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { deleteUser } from '../../../../services/userAPI';\r\nimport ModalBox from '../../../UI/modal-box';\r\n\r\nfunction UserDelete(props) {\r\n    const [showDeletePopup, setShowDeletePopup] = useState(false);\r\n\r\n    const onDeleteHandler = () => {\r\n        deleteUser(props.id).then(data => {\r\n            if (data) {\r\n                props.onDeleteUser(props.id);\r\n            }\r\n        })\r\n    }\r\n\r\n    const onTogglePopup = () => {\r\n        setShowDeletePopup(prevState => !prevState);\r\n    }\r\n\r\n    return <>\r\n        <ModalBox\r\n            show={showDeletePopup}\r\n            onHide={onTogglePopup}\r\n            handleYes={onDeleteHandler}\r\n            handleNo={onTogglePopup}\r\n            title={`Видалення користувача`}\r\n            body={`Ви дійсно бажаєте видалити користувача ${props.name}`}\r\n        />\r\n\r\n        <Button variant=\"danger\" onClick={onTogglePopup}>X</Button>\r\n    </>;\r\n}\r\n\r\nexport default UserDelete;\r\n","import React from 'react';\r\nimport './user-item.scss';\r\nimport { Form } from 'react-bootstrap';\r\nimport { changeRole } from '../../../../services/userAPI';\r\nimport { useSelector } from 'react-redux';\r\nimport UserDelete from '../user-delete/user-delete';\r\n\r\nfunction UserItem(props) {\r\n    const { page,\r\n        pageLimit,\r\n        index,\r\n        id,\r\n        role,\r\n        email,\r\n        phone,\r\n        name } = props;\r\n\r\n    const { id: idUserLogined } = useSelector(({ user }) => user);\r\n\r\n    let userNumber = props.page === 2 ?\r\n        index + pageLimit : page * pageLimit - pageLimit + index;\r\n\r\n\r\n    const changeRoleHandler = (e) => {\r\n        changeRole(id, e.target.value);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{userNumber + 1}</td>\r\n            <td>{id}</td>\r\n            <td>{name}</td>\r\n            <td>{!phone ? '---------' : phone}</td>\r\n            <td>{email}</td>\r\n            <td>\r\n                {idUserLogined !== id ?\r\n                    <Form.Control as=\"select\" defaultValue={role} onChange={changeRoleHandler}>\r\n                        <option value=\"ADMIN\">ADMIN</option>\r\n                        <option value=\"MODERATOR\">MODERATOR</option>\r\n                        <option value=\"USER\">USER</option>\r\n                    </Form.Control> : role\r\n                }\r\n            </td>\r\n            <td>\r\n                {idUserLogined !== id ?\r\n                    <UserDelete id={id} onDeleteUser={props.onDeleteUser} name={name} /> : ''}\r\n            </td>\r\n        </tr >\r\n    )\r\n}\r\n\r\nexport default UserItem\r\n","import UserItem from './user-item';\r\nexport default UserItem;","import React from 'react';\r\nimport Container from '../../UI/container';\r\nimport apiServices from '../../../services/api-services';\r\nimport UserItem from './user-item';\r\nimport { Table } from 'react-bootstrap';\r\nimport Pagination from '../../UI/pagination'\r\n\r\nimport './users-list.scss';\r\n\r\nfunction UsersList() {\r\n    const [users, setUsers] = React.useState('');\r\n    const [totalCount, setTotalCount] = React.useState(5);\r\n    const [page, setPage] = React.useState(1);\r\n\r\n    const limit = 9;\r\n\r\n    React.useEffect(() => {\r\n        const getUsers = () => {\r\n            apiServices.getUsers(limit, page).then(data => {\r\n                setUsers(data.rows);\r\n                setTotalCount(data.count)\r\n            })\r\n        }\r\n\r\n        getUsers();\r\n    }, [page])\r\n\r\n    const deleteUserHandler = (id) => {\r\n        const newUsers = users.filter(user => user.id !== id);\r\n\r\n        if (newUsers.length === 0 && page > 1) {\r\n            setPage(prevState => prevState - 1)\r\n        }\r\n        setUsers([...newUsers]);\r\n    }\r\n\r\n    return (\r\n        <Container title={'Список зареєстрованих користувачів'}>\r\n            <div className=\"users-list\">\r\n                <Table responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Phone</th>\r\n                            <th>Email</th>\r\n                            <th>Role</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.length !== 0 &&\r\n                            users.map((user, index) => (\r\n                                <UserItem\r\n                                    onDeleteUser={deleteUserHandler}\r\n                                    key={user.id}\r\n                                    index={index}\r\n                                    pageLimit={limit}\r\n                                    page={page}\r\n                                    {...user}\r\n                                />\r\n                            ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n\r\n            <Pagination\r\n                currentPage={page}\r\n                totalCount={totalCount}\r\n                pageSize={limit}\r\n                onPageChange={page => setPage(page)}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","import UsersList from './users-list';\r\nexport default UsersList;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './admin-order-delete.scss';\r\nimport { deleteOrders } from '../../../services/productsAPI';\r\nimport { fetchOrders, setOrdersPage } from '../../../redux/actions';\r\nimport ModalBox from '../../UI/modal-box';\r\n\r\nfunction AdminOrderDelete(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [showDeletePopup, setShowDeletePopup] = useState(false);\r\n\r\n    const { pageOrders, limit, items } = useSelector(({ orders }) => orders);\r\n\r\n    const onDeleteHandler = () => {\r\n        deleteOrders(props.id).then(data => {\r\n            dispatch(fetchOrders(pageOrders, limit))\r\n            if (items.length === 1 && pageOrders > 1) {\r\n                dispatch(setOrdersPage(pageOrders - 1))\r\n            }\r\n        })\r\n\r\n        onShowPopupHandler();\r\n    }\r\n\r\n    const onShowPopupHandler = () => {\r\n        setShowDeletePopup(prevState => !prevState);\r\n    }\r\n\r\n    return <>\r\n        <ModalBox\r\n            show={showDeletePopup}\r\n            onHide={onShowPopupHandler}\r\n            handleNo={onShowPopupHandler}\r\n            handleYes={onDeleteHandler}\r\n            title={`Видалення замовлення`}\r\n            body={`Ви дійсно бажаєте видалити замовлення №${props.orderNumber} ?`}\r\n        />\r\n        <div className=\"del-order-btn\" onClick={onShowPopupHandler}>Видалити</div>\r\n    </>\r\n}\r\n\r\nexport default AdminOrderDelete;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ImgUrlDefault, ProductDefault } from '../../../utils/consts';\r\n\r\nfunction OrderTableItem({ item }) {\r\n    const [isProductDeleted, setIsProductDeleted] = useState(false);\r\n\r\n    const onErrorImage = (e) => {\r\n        setIsProductDeleted(true);\r\n        e.target.onError = null;\r\n        e.target.src = `${ImgUrlDefault.PRODUCTS}${ProductDefault.IMAGE}`;\r\n    }\r\n\r\n    return <tr key={item.id}>\r\n        <td className=\"order-table-img\">\r\n            <img src={`${ImgUrlDefault.PRODUCTS}${item.img}`} onError={onErrorImage} alt=\"poster\" />\r\n        </td>\r\n        <td>\r\n            {isProductDeleted ? <p>{item.name}</p> : <Link to={`/shop/${item.goodsId}`}>{item.name}</Link>}\r\n        </td>\r\n        <td>{item.count}</td>\r\n        <td>{item.price * item.count} ₴</td>\r\n    </tr>\r\n}\r\n\r\nexport default OrderTableItem;\r\n","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport OrderTableItem from './order-table-item';\r\n\r\nimport './orders-table.scss';\r\n\r\nfunction OrdersTable(props) {\r\n    return (\r\n        <Table responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Назва</th>\r\n                    <th>Кількість</th>\r\n                    <th>Сума</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.items.map(item => <OrderTableItem key={item.id} item={item} />)}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default OrdersTable\r\n","import OrdersTable from './orders-table';\r\nexport default OrdersTable;","import React from 'react'\r\nimport DropdownArrow from '../../UI/dropdown-arrow'\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchOrdersItems } from '../../../redux/actions/orders';\r\nimport { ImgUrlDefault, ProductDefault } from '../../../utils/consts';\r\nimport AdminOrderDelete from '../../admin/admin-order-delete/admin-order-delete';\r\nimport useIsAdmin from '../../../hooks/useIsAdmin';\r\n\r\nimport './orders-list-item.scss';\r\nimport OrdersTable from '../orders-table';\r\n\r\nfunction OrdersListItem(props) {\r\n    const dispatch = useDispatch();\r\n    const isAdmin = useIsAdmin();\r\n\r\n    const [dropdownOrder, setDropdownOrder] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchOrdersItems(props.orderNumber));\r\n    }, [dispatch, props.orderNumber]);\r\n\r\n    const showOrderDetailsHandler = () => {\r\n        setDropdownOrder(prevState => !prevState);\r\n    }\r\n\r\n    const onErrorImage = (e) => {\r\n        e.target.onError = null;\r\n        e.target.src = `${ImgUrlDefault.PRODUCTS}${ProductDefault.IMAGE}`;\r\n    }\r\n\r\n    const orderImages = props.goods.map(item => item.img);\r\n\r\n    const images = orderImages.slice(0, 3).map((img, index) => {\r\n        return <img key={index + img} src={`${ImgUrlDefault.PRODUCTS}${img}`} onError={onErrorImage} alt=\"poster\" />\r\n    });\r\n\r\n    const orderData = props.date.split('T')[0].split('-').join('/');\r\n\r\n    return (\r\n        <>\r\n            <li className=\"orders-item-list\">\r\n\r\n                <div className=\"order-item\" onClick={showOrderDetailsHandler}>\r\n                    <div className=\"order-item__section order-item__number\">\r\n                        <span>№</span> {props.orderNumber}\r\n                    </div>\r\n                    <div className=\"order-item__section order-item__date\">\r\n                        <span>Дата:</span> {orderData}\r\n                    </div>\r\n                    <div className=\"order-item__section order-item__amount\">\r\n                        <span>Загальна сума:</span> {props.totalAmount} ₴\r\n                    </div>\r\n                    <div className=\"order-item__section order-item__images\">\r\n                        {images}\r\n                        {orderImages.length > 3 ? `+${orderImages.length - 3}` : ''}\r\n                    </div>\r\n\r\n                    <div className=\"drop-arrow\">\r\n                        <DropdownArrow rotate={dropdownOrder} />\r\n                    </div>\r\n                </div>\r\n\r\n                {dropdownOrder &&\r\n                    <>\r\n                        <OrdersTable items={props.goods} />\r\n\r\n                        <div className=\"user-order-info\">\r\n                            <p><span>Ім'я:</span> {props.userName}</p>\r\n                            <p><span>Пошта:</span> {props.userEmail}</p>\r\n                            <p><span>Телефон:</span> {props.userPhone}</p>\r\n                            <span><p>{!props.goods[0].userId && 'не зареєстрований користувач'}</p></span>\r\n                        </div>\r\n\r\n                        <div className=\"orders-item-list__total\"><span>Загальна сума:</span> {props.totalAmount} ₴</div>\r\n                        {isAdmin && <AdminOrderDelete id={props.id} orderNumber={props.orderNumber} />}\r\n                    </>}\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrdersListItem\r\n","import OrdersListItem from './orders-list-item';\r\nexport default OrdersListItem;","import React from 'react';\r\nimport Container from '../UI/container'\r\nimport OrdersListItem from './orders-list-item';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchOrders, setOrdersPage } from '../../redux/actions';\r\nimport Pagination from '../UI/pagination';\r\n\r\nimport './orders-list.scss';\r\nimport { UserRoles } from '../../utils/consts';\r\n\r\nfunction OrdersList() {\r\n    const dispatch = useDispatch();\r\n\r\n    const { id, role } = useSelector(({ user }) => user);\r\n    const { pageOrders, limit, items, isLoaded, totalCount } = useSelector(({ orders }) => orders);\r\n\r\n    const ordersList = items && items.map((order, index) => <OrdersListItem key={order.orderNumber} {...order} />);\r\n\r\n    React.useEffect(() => {\r\n        if (role !== UserRoles.ADMIN) {\r\n            dispatch(fetchOrders(pageOrders, limit, id))\r\n        } else {\r\n            dispatch(fetchOrders(pageOrders, limit))\r\n        }\r\n    }, [id, pageOrders, limit, dispatch, role]);\r\n\r\n    const handleChangePage = (pageNumber) => {\r\n        dispatch(setOrdersPage(pageNumber));\r\n    }\r\n\r\n    return (\r\n        <Container title={'Мої замовлення'} isLoaded={isLoaded}>\r\n            <ul>\r\n                {ordersList.length === 0 ?\r\n                    <p className=\"order-list-empty\">Список замовлень відсутній</p> : ordersList}\r\n            </ul>\r\n\r\n            <Pagination\r\n                currentPage={pageOrders}\r\n                totalCount={totalCount}\r\n                pageSize={limit}\r\n                onPageChange={pageOrders => handleChangePage(pageOrders)}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrdersList\r\n","import OrdersList from './orders-list';\r\nexport default OrdersList;","import React, { useState } from 'react';\r\nimport { isFiveChars } from '../../helpers/isValidInput';\r\nimport Container from '../../components/UI/container';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { resetPassword } from '../../services/userAPI';\r\n\r\nfunction ResetPasswordPage({ userId, token }) {\r\n    const [error, setError] = useState('');\r\n    const [enteredPasswordInput, setEnteredPasswordInput] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onChangePasswordHandler = (e) => {\r\n        setError('');\r\n        setEnteredPasswordInput(e.target.value);\r\n    }\r\n\r\n    const onSubmitNewPassword = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!isFiveChars(enteredPasswordInput)) {\r\n            setError('Пароль повинен бути не менше 5 символів');\r\n            return;\r\n        }\r\n\r\n        resetPassword(userId, token, enteredPasswordInput).then(data => {\r\n            console.log(data);\r\n        })\r\n\r\n        history.push('/login');\r\n    }\r\n\r\n    return <Container>\r\n        <form className=\"login-form\" onSubmit={onSubmitNewPassword}>\r\n\r\n            {error.length > 0 && <Alert variant='danger'>\r\n                {error}\r\n            </Alert>}\r\n\r\n            <h3> Введіть новий пароль: </h3>\r\n\r\n            <div className=\"form-outline mb-4\">\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    className=\"form-control\"\r\n                    value={enteredPasswordInput}\r\n                    onChange={onChangePasswordHandler}\r\n                />\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Змінити пароль</button>\r\n        </form>\r\n    </Container >;\r\n}\r\n\r\nexport default ResetPasswordPage;\r\n","import React from 'react';\r\nimport { Button, Form, Alert, } from 'react-bootstrap';\r\nimport { ImgUrlDefault } from '../../../../utils/consts';\r\n\r\nimport './profile-edit-form.scss';\r\n\r\nfunction ProfileEditForm(props) {\r\n    const [enteredName, setEnteredName] = React.useState(props.name);\r\n    const [enteredEmail, setEnteredEmail] = React.useState(props.email);\r\n    const [enteredPhone, setEnteredPhone] = React.useState(props.phone);\r\n    const [selectedImage, setSelectedImage] = React.useState('')\r\n    const [error, setError] = React.useState('')\r\n\r\n    const onHideForm = () => {\r\n        props.onShowFormHandler();\r\n        setError('');\r\n    }\r\n\r\n    const selectFile = (e) => {\r\n        const fileType = e.target.files[0].type.split('/')[0];\r\n        if (fileType !== 'image') {\r\n            setError('Помилка! Заборонений тип файла');\r\n            return;\r\n        }\r\n        setError('');\r\n        setSelectedImage(e.target.files[0]);\r\n    }\r\n\r\n    const onChangeNameHandler = (e) => {\r\n        setError('');\r\n        setEnteredName(e.target.value)\r\n    }\r\n    const onChangeEmailHandler = (e) => {\r\n        setError('');\r\n        setEnteredEmail(e.target.value)\r\n    }\r\n    const onChangePhoneHandler = (e) => {\r\n        setError('');\r\n        setEnteredPhone(e.target.value)\r\n    }\r\n\r\n    const onSubmitHandler = () => {\r\n        if (enteredName.trim().length === 0) {\r\n            setError('Помилка! Ім\\'я не може бути порожнім');\r\n            return;\r\n        }\r\n\r\n        if (!enteredEmail.includes('@') || enteredEmail.trim().length === 0) {\r\n            setError('Помилка! Ви ввели не корректну пошту');\r\n            return;\r\n        }\r\n\r\n        const newProfile = {\r\n            name: enteredName,\r\n            email: enteredEmail,\r\n            phone: enteredPhone,\r\n            image: selectedImage\r\n        }\r\n\r\n        props.onSaveProfile(newProfile);\r\n        onHideForm();\r\n    }\r\n\r\n    const imgUrl = selectedImage.length === 0 ?\r\n        `${ImgUrlDefault.USERS}${props.image}` : URL.createObjectURL(selectedImage);\r\n\r\n    return (\r\n        <Form onSubmit={onSubmitHandler} >\r\n\r\n            {error && <Alert className=\"m-2 profile-edit__error\" variant={'danger'}>\r\n                {error}\r\n            </Alert>}\r\n\r\n            <div className=\"user-profile\">\r\n                <div className=\"user-profile__image profile-edit-form__image\">\r\n\r\n                    <img src={`${imgUrl}`} alt=\"user-avatar\" />\r\n\r\n                    <Form.Control\r\n                        onChange={selectFile}\r\n                        type=\"file\"\r\n                        placeholder=\"Enter the image url\"\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div className=\"user-info\">\r\n                    <div className=\"user-profile__item\">\r\n                        <span>\r\n                            Ім'я:\r\n                        </span>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Введіть ваше ім'я\"\r\n                            value={enteredName}\r\n                            onChange={onChangeNameHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"user-profile__item\">\r\n                        <span>Email: </span>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Введіть вашу пошту\"\r\n                            value={enteredEmail}\r\n                            onChange={onChangeEmailHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"user-profile__item\">\r\n                        <span>Телефон: </span>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"Введіть ваш мобільний номер\"\r\n                            value={enteredPhone ? enteredPhone : ''}\r\n                            onChange={onChangePhoneHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-edit-form__nav\">\r\n                <Button variant=\"secondary\" onClick={onHideForm}>\r\n                    Відмінити\r\n                </Button>\r\n\r\n                <Button className=\"m-2\" variant=\"primary\" type=\"button\" onClick={onSubmitHandler}>\r\n                    Зберегти\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default ProfileEditForm\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Modal, Form, Col, Button, Alert } from 'react-bootstrap';\r\nimport { changePassword } from '../../../../services/userAPI';\r\nimport { isFiveChars, isEmpty } from '../../../../helpers/isValidInput';\r\nimport './change-password-form.scss';\r\n\r\nfunction ChangePasswordForm() {\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [currentPasswordInput, setCurrentPasswordInput] = useState('');\r\n    const [newPasswordInput, setNewPasswordInput] = useState('');\r\n    const [serverError, setServerError] = useState('');\r\n\r\n    const [errors, setErrors] = useState({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n    });\r\n\r\n    const { id } = useSelector(({ user }) => user);\r\n\r\n    const updateErrors = (inputName, msg) => {\r\n        setErrors(state => {\r\n            return {\r\n                ...state,\r\n                [inputName]: msg\r\n            }\r\n        })\r\n    }\r\n\r\n    const onChangePasswordHandler = (e) => {\r\n        setShowForm(prevState => !prevState);\r\n    }\r\n\r\n    const onChangeCurrentPasswordInput = (e) => {\r\n        setCurrentPasswordInput(e.target.value);\r\n\r\n        updateErrors('currentPassword', '');\r\n    }\r\n\r\n    const onChangeNewPasswordInput = (e) => {\r\n        setNewPasswordInput(e.target.value);\r\n\r\n        updateErrors('newPassword', '');\r\n    }\r\n\r\n    const onSavePassword = () => {\r\n        if (isEmpty(currentPasswordInput)) {\r\n            updateErrors('currentPassword', 'Ваш пароль не збігається');\r\n            return;\r\n        }\r\n\r\n        if (!isFiveChars(newPasswordInput)) {\r\n            updateErrors('newPassword', 'Пароль повинен бути не коротшим 5 символів');\r\n            return;\r\n        }\r\n\r\n        changePassword(currentPasswordInput, newPasswordInput, id).then(data => {\r\n            onChangePasswordHandler();\r\n        }).catch(error => {\r\n            setServerError('Невірний поточний пароль');\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showForm && <Modal size=\"lg\" animation={true} show={showForm} onHide={onChangePasswordHandler}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title> Зміна паролю </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                {serverError.length !== 0 && <Alert variant=\"danger\" className=\"m-2\">\r\n                    {serverError}\r\n                </Alert>}\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"currentPasswrod\">\r\n                                <Form.Label>\r\n                                    Поточний пароль\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    value={currentPasswordInput}\r\n                                    onChange={onChangeCurrentPasswordInput}\r\n                                    placeholder=\"Введіть ваш поточний пароль\"\r\n                                />\r\n                                {errors.currentPassword.length !== 0 && <p className=\"error-input\">{errors.currentPassword}</p>}\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <br />\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"phone\">\r\n                                <Form.Label>\r\n                                    Новий пароль\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    value={newPasswordInput}\r\n                                    onChange={onChangeNewPasswordInput}\r\n                                    placeholder=\"Введіть, будь ласка, новий пароль\"\r\n                                />\r\n                                {errors.newPassword.length !== 0 && <p className=\"error-input\">{errors.newPassword}</p>}\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <br />\r\n\r\n                        <hr />\r\n\r\n                        <Button variant=\"secondary\" onClick={onChangePasswordHandler}>\r\n                            Відмінити\r\n                        </Button>\r\n\r\n                        <Button className=\"m-2\" variant=\"primary\" id=\"btn\" type=\"button\" onClick={onSavePassword}>\r\n                            Зберегти\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>}\r\n            <span>\r\n                <button className=\"change-password-btn\"\r\n                    onClick={onChangePasswordHandler}>Змінити пароль</button>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangePasswordForm;\r\n","import React from 'react';\r\nimport Container from '../../UI/container';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\nimport { setUser } from '../../../redux/actions';\r\nimport { updateUser } from '../../../services/userAPI';\r\nimport ProfileEditForm from './profile-edit-form/profile-edit-form';\r\n\r\nimport './user-profile.scss';\r\nimport { ImgUrlDefault, UserDefault } from '../../../utils/consts';\r\nimport ChangePasswordForm from './change-password-form/change-password-form';\r\n\r\nfunction UserProfile() {\r\n    const dispatch = useDispatch();\r\n\r\n    const { id, image, name, email, phone } = useSelector(({ user }) => user);\r\n\r\n    const [isFormVisible, setIsFormVisible] = React.useState(false);\r\n    const [isLoaded, setIsLoading] = React.useState(true);\r\n\r\n    const onShowFormHandler = () => {\r\n        setIsFormVisible(prevState => !prevState);\r\n    }\r\n\r\n    const onSaveProfile = (profile) => {\r\n        try {\r\n            setIsLoading(false);\r\n            const formData = new FormData();\r\n            formData.append('name', profile.name);\r\n            formData.append('email', profile.email);\r\n            formData.append('phone', profile.phone);\r\n\r\n            typeof profile.image !== 'string' && formData.append('image', profile.image);\r\n\r\n            updateUser(formData, id).then(data => {\r\n                profile.image = data.image;\r\n                dispatch(setUser(profile))\r\n                setIsLoading(true);\r\n            })\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    const imgUrl = !image ? UserDefault.IMAGE : image;\r\n\r\n    return (\r\n        <Container title=\"Профіль\" isLoaded={isLoaded}>\r\n            {!isFormVisible ? <div className=\"user-profile\">\r\n                <div className=\"user-profile__image\">\r\n                    <img src={`${ImgUrlDefault.USERS}${imgUrl}`} alt=\"user-avatar\" />\r\n                </div>\r\n                <div className=\"user-info\">\r\n                    <div className=\"edit-profile-btn\" onClick={onShowFormHandler}>\r\n                        <PencilSquare />\r\n                    </div>\r\n                    <div className=\"user-profile__item\">\r\n                        <span>Ім'я: </span>\r\n                        {name}\r\n                    </div>\r\n                    <div className=\"user-profile__item\">\r\n                        <span>Email: </span>\r\n                        {email}\r\n                    </div>\r\n                    <div className=\"user-profile__item\">\r\n                        <span>Номер телефону: </span>\r\n                        {phone ? phone : ''}\r\n                    </div>\r\n                    <div className=\"user-profile__item\">\r\n                        <ChangePasswordForm />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n                :\r\n                <ProfileEditForm\r\n                    image={imgUrl}\r\n                    name={name}\r\n                    email={email}\r\n                    phone={phone}\r\n                    onShowFormHandler={onShowFormHandler}\r\n                    onSaveProfile={onSaveProfile}\r\n                />\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","import UserProfile from './user-profile';\r\nexport default UserProfile;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setIsAuth, setUser } from '../redux/actions';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from '../components/Layout/header';\r\nimport Footer from '../components/Layout/footer';\r\nimport ShopItemDetails from '../components/shop-item-details';\r\nimport Error404 from '../components/error-404';\r\nimport Spinner from '../components/UI/spinner';\r\nimport * as Pages from '../pages';\r\nimport UsersList from '../components/admin/users-list';\r\nimport { Routes } from '../utils/consts';\r\nimport OrdersList from '../components/orders-list';\r\nimport { useSelector } from 'react-redux';\r\nimport ResetPasswordPage from '../pages/reset-password-page/reset-password-page';\r\n\r\nimport { check } from '../services/userAPI';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.scss';\r\nimport UserProfile from '../components/user/user-profile';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const { isAuth } = useSelector(({ user }) => user);\r\n\r\n  React.useEffect(() => {\r\n    check().then(data => {\r\n      dispatch(setIsAuth(true))\r\n      dispatch(setUser(data))\r\n    }).finally(() => {\r\n      setLoading(false)\r\n    })\r\n  }, [dispatch])\r\n\r\n  if (loading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n\r\n        <Route exact path={Routes.HOME_ROUTE} component={Pages.HomePage} />\r\n        <Route exact path={Routes.ABOUT_ROUTE} component={Pages.AboutUsPage} />\r\n        <Route exact path={Routes.CONTACTS_ROUTE} component={Pages.ContactsPage} />\r\n        <Route exact path={Routes.PAYMENT_DELIVERY_ROUTE} component={Pages.PaymentDeliveryPage} />\r\n        <Route exact path={Routes.CART_ROUTE} component={Pages.CartPage} />\r\n        <Route path={Routes.SHOP_ROUTE} exact component={Pages.ShopPage} />\r\n\r\n        <Route path={Routes.SHOP_ITEM_ROUTE} render={({ match }) => {\r\n          return <ShopItemDetails itemId={match.params.id} exact />\r\n        }} />\r\n\r\n        <Route path={Routes.LOGIN_ROUTE} component={Pages.AuthPage} />\r\n        <Route path={Routes.REGISTRATION_ROUTE} component={Pages.AuthPage} />\r\n\r\n        {isAuth &&\r\n          [\r\n            <Route path={Routes.ORDERS_LIST} key={Routes.ORDERS_LIST} component={OrdersList} />,\r\n            <Route path={Routes.USERS_LIST} key={Routes.USERS_LIST} component={UsersList} />,\r\n            <Route path={Routes.USER_PROFILE} key={Routes.USER_PROFILE} component={UserProfile} />\r\n          ]\r\n        }\r\n\r\n        <Route path={Routes.USER_RESET_PASSWORD} render={({ match }) => {\r\n          return <ResetPasswordPage userId={match.params.id} token={match.params.token} />\r\n        }} />\r\n\r\n        <Route path=\"*\" component={Error404} />\r\n      </Switch>\r\n      <Footer />\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import App from './App';\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport ScrollToTop from './components/scroll-to-top/scroll-to-top';\r\n\r\nimport App from './app';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <ScrollToTop>\r\n        <App />\r\n      </ScrollToTop>\r\n    </Provider>\r\n  </Router >,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}